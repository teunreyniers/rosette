{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../Collapsible.svelte",
    "../../ColorSelector.svelte",
    "../../DataEditor.svelte",
    "../../DragInput.svelte",
    "../../DragSelect.svelte",
    "../../DraggableList.svelte",
    "../../DraggablePanes.svelte",
    "../../Grid.svelte",
    "../../HsvPicker.svelte",
    "../../InfoPopup.svelte",
    "../../LabelForm.svelte",
    "../../LineStyleForm.svelte",
    "../../Nav.svelte",
    "../../Options.svelte",
    "../../Rosette.svelte",
    "../../TextForm.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { _ } from \"svelte-i18n\";\n\n  import Grid from \"./components/Grid.svelte\";\n  import Rosette from \"./components/Rosette.svelte\";\n  import Options from \"./components/Options.svelte\";\n  import Nav from \"./components/Nav.svelte\";\n  import DataEditor from \"./components/DataEditor.svelte\";\n  import { onMount, tick } from \"svelte\";\n  import { move } from \"./helpers/array\";\n  import { getSectionByIndex } from \"./gradeCalculator\";\n  import { createPdf, createZip } from \"./converter\";\n  import { v4 as uuidv4 } from \"uuid\";\n  import { parseSheet } from \"./dataparser\";\n\n  let state = {\n    lines: {\n      sections: {\n        width: 0.9,\n        style: \"none\",\n        color: \"#666666\",\n        cap: \"round\"\n      },\n      parts: {\n        width: 0.7,\n        style: \"none\",\n        color: \"#999999\",\n        cap: \"round\"\n      },\n      grades: {\n        width: 0.7,\n        style: \"none\",\n        color: \"#999999\",\n        cap: \"round\"\n      }\n    },\n    textoptions: {\n      sections: {\n        title: $_(\"properties.sections\"),\n        readonly: false,\n        name: \"Student name\",\n        value: \"<name>\",\n        xpos: 0,\n        ypos: 5,\n        size: 14,\n        weight: 200,\n        angle: 0,\n        anchor: \"middle\",\n        color: \"#000000\",\n        curve: \"normal\",\n        flip: \"none\"\n      },\n      parts: {\n        title: $_(\"properties.parts\"),\n        readonly: false,\n        name: \"Student name\",\n        value: \"<name>\",\n        xpos: 0,\n        ypos: 0,\n        size: 9,\n        weight: 400,\n        angle: 0,\n        anchor: \"middle\",\n        color: \"#000000\",\n        curve: \"normal\",\n        flip: \"none\"\n      },\n      grades: {\n        title: $_(\"properties.grades\"),\n        readonly: false,\n        name: \"Student name\",\n        value: \"<name>\",\n        xpos: 0,\n        ypos: 30,\n        size: 6,\n        weight: 400,\n        angle: 0,\n        anchor: \"middle\",\n        color: \"#000000\",\n        curve: \"normal\",\n        flip: \"none\"\n      }\n    }\n  };\n\n  let creator;\n  let creatorIndex = 0;\n  let grades = [\n    { key: \"1\", color: \"#ff8ba7\", name: \"Can Better\" },\n    { key: \"2\", color: \"#ffc6c7\", name: \"Fine\" },\n    { key: \"3\", color: \"#c3f0ca\", name: \"Good\" },\n    { key: \"4\", color: \"#abd1c6\", name: \"Super\" }\n  ];\n  let students = [\n    {\n      key: \"dd\",\n      name: \"Daan De man\"\n    },\n    {\n      key: \"ee\",\n      name: \"Frans de gans\"\n    },\n    {\n      key: \"cc\",\n      name: \"John Beko\"\n    },\n    {\n      key: \"qq\",\n      name: \"Els verlaten\"\n    }\n  ];\n  let sections = [\n    {\n      key: \"dd\",\n      name: \"Science\",\n      parts: [\n        {\n          key: \"dd1\",\n          name: \"Fysics\",\n          scores: [\"\", 2, 3, 2],\n          tbs: 0,\n          threshold: 0\n        },\n        {\n          key: \"dd2\",\n          name: \"Biology\",\n          scores: [1, 2, 2, 3],\n          tbs: 0,\n          threshold: 0\n        },\n        {\n          key: \"dd3\",\n          name: \"Chemistry\",\n          scores: [4, 2, 3, 1],\n          tbs: 0,\n          threshold: 0\n        }\n      ]\n    },\n    {\n      key: \"dd9\",\n      name: \"Languages\",\n      parts: [\n        {\n          key: \"dd54\",\n          name: \"French\",\n          scores: [1, 2, 3, 4],\n          tbs: 0,\n          threshold: 0\n        },\n        {\n          key: \"dddd\",\n          name: \"English\",\n          scores: [1, 2, 3, 1],\n          tbs: 0,\n          threshold: 0\n        },\n        {\n          key: \"dddddfd\",\n          name: \"German\",\n          scores: [1, 2, 3, 2],\n          tbs: 0,\n          threshold: 0\n        }\n      ]\n    }\n  ];\n  let labels = [\n    {\n      key: \"__name__\",\n      readonly: true,\n      name: $_(\"options.labels.student_name_label\"),\n      value: \"Not used\",\n      xpos: 0,\n      ypos: -145,\n      size: 18,\n      weight: 600,\n      angle: 0,\n      anchor: \"middle\",\n      color: \"#000000\"\n    },\n    {\n      key: uuidv4(),\n      readonly: false,\n      name: $_(\"options.labels.course_name_label\"),\n      value: $_(\"options.labels.course_name_label\"),\n      xpos: 0,\n      ypos: -130,\n      size: 12,\n      weight: 200,\n      angle: 0,\n      anchor: \"middle\",\n      color: \"#000000\"\n    },\n    {\n      key: uuidv4(),\n      readonly: false,\n      name: $_(\"options.labels.copyright_label\"),\n      value: $_(\"options.labels.copyright_value\"),\n      xpos: -120,\n      ypos: 115,\n      size: 3,\n      weight: 400,\n      angle: 0,\n      anchor: \"left\",\n      color: \"#000000\"\n    }\n  ];\n  let spaces = [2, 1, 1, 1, 0.7, 0.3];\n\n  let layout = {\n    size_x: 250,\n    size_y: 290,\n    center_x: 125,\n    center_y: 170,\n    papersize: \"a4\",\n    angleoffset: -1.5,\n    png_height: 2048,\n    png_width: 2048,\n    pdf_height: 500\n  };\n\n  let workbook = {};\n  let file = {\n    sheets: [],\n    selectedsheet: \"\"\n  };\n\n  let dataoptions = {\n    mode: \"simple\",\n    thresholds: [0.5, 0.7, 0.9],\n    importoptions: {}\n  };\n\n  let devitions = 4;\n\n  $: rosettes = students.map((student, index) => ({\n    sections: getSectionByIndex(sections, index, dataoptions),\n    labels: labels.map(label => {\n      if (label.key === \"__name__\") return { ...label, value: student.name };\n      else return label;\n    }),\n    key: student.key\n  }));\n\n  let isEditRecordsOpen = false;\n\n  function handleGradechange({ detail }) {\n    const { action } = detail;\n    switch (action) {\n      case \"reorder\":\n        grades = move(grades, detail.from, detail.to);\n        break;\n      case \"delete\":\n        grades = grades.filter((_, i) => detail.index != i);\n        break;\n      case \"add\":\n        grades = [{ key: uuidv4(),  color: \"#eeeeee\", name: \"\" }, ...grades];\n        break;\n      case \"change\":\n        grades[detail.index] = detail.value;\n        break;\n      default:\n        break;\n    }\n  }\n\n  function handleLabelChange({ detail }) {\n    const { action } = detail;\n    switch (action) {\n      case \"add\":\n        labels = [\n          ...labels,\n          {\n            key: uuidv4(),\n            readonly: false,\n            name: \"<name>\",\n            value: \"<value>\",\n            xpos: 0,\n            ypos: 120,\n            size: 12,\n            weight: 400,\n            angle: 0,\n            anchor: \"middle\"\n          }\n        ];\n        break;\n      case \"change\":\n        const { index, label } = detail;\n        labels[index] = label;\n        break;\n      case \"delete\":\n        labels = labels.filter((_, i) => detail.index != i);\n        break;\n      default:\n        break;\n    }\n  }\n\n  function handleSpaceChange({ detail }) {\n    const { action } = detail;\n    switch (action) {\n      case \"change\":\n        spaces[detail.index] =\n          detail.value === \"\"\n            ? \"\"\n            : Math.round(parseFloat(detail.value) * 100) / 100;\n        break;\n      case \"devitions\":\n        devitions = detail.value === \"\" ? \"\" : parseInt(detail.value);\n        const arr = spaces.slice(spaces.length - devitions - 2);\n        spaces = [...Array(devitions + 2 - arr.length).fill(1), ...arr];\n        break;\n      default:\n        break;\n    }\n  }\n\n  function createKeyValueChangeHandler(name) {\n    return ({ detail }) => {\n      const { key, ...value } = detail;\n      state[name][key] = value;\n    };\n  }\n\n  async function handleDownloadFile(event) {\n    // Loop through every student and generate svg code\n    const items = [];\n    creatorIndex = 0;\n    await tick();\n    for (let i = 0; i < students.length; i++) {\n      creatorIndex = i;\n      await tick();\n\n      items.push({\n        name: students[i].name,\n        svg: creator.innerHTML\n      });\n    }\n    creatorIndex = 0;\n\n    // Convert the svg code to the desired file format\n    if (event.detail.type === \"1pdf\") {\n      createPdf(items, layout);\n    } else {\n      createZip(items, event.detail.type, layout);\n    }\n  }\n\n  function handleDatachange({ detail }) {\n    const { target, action } = detail;\n    if (target === \"file\") {\n      if (action === \"file\") {\n        workbook = detail.value;\n        file.sheets = workbook.SheetNames;\n        const sheet = workbook.Sheets[file.sheets[0]];\n        if (sheet && sheet[\"!ref\"]) {\n          const result = parseSheet(sheet);\n          students = result.students;\n          sections = result.sections;\n        }\n      } else if (action === \"selectedsheet\") {\n        file.selectedsheet = detail.value;\n        const sheet = workbook.Sheets[file.selectedsheet];\n        if (sheet && sheet[\"!ref\"]) {\n          const result = parseSheet(sheet);\n          students = result.students;\n          sections = result.sections;\n        }\n      }\n    } else if (target === \"dataoptions\") {\n      if (action === \"modechange\") {\n        dataoptions.mode = detail.value;\n      } else if (action === \"change_threshold\") {\n        dataoptions.thresholds[detail.index] = detail.value;\n        dataoptions.thresholds = dataoptions.thresholds.filter(e => e !== \"\");\n      } else if (action === \"add_threshold\") {\n        dataoptions.thresholds = [...dataoptions.thresholds, detail.value];\n      }\n    } else if (target === \"students\") {\n      if (action === \"change\") {\n        students[detail.index].name = detail.value;\n      } else if (action == \"add\") {\n        sections = sections.map(section => ({\n          ...section,\n          parts: section.parts.map(part => ({\n            ...part,\n            scores: [...part.scores, 0]\n          }))\n        }));\n        students = [\n          ...students,\n          {\n            key: uuidv4(),\n            name: detail.value\n          }\n        ];\n        \n      }\n    } else if (target === \"sections\") {\n      if (action === \"reorder\") {\n        sections = move(sections, detail.from, detail.to);\n      } else if (action === \"delete\") {\n        sections = sections.filter((_, i) => detail.index != i);\n      } else if (action === \"add\") {\n        sections = [\n          ...sections,\n          { key: uuidv4(), name: \"new section\", parts: [] }\n        ];\n      } else if (action === \"change\") {\n        sections[detail.index].name = detail.value;\n      }\n    } else if (target === \"parts\") {\n      if (action === \"reorder\") {\n        const { from, to, fromscope, toscope } = detail;\n        const item = sections[fromscope].parts[from];\n        sections[fromscope].parts = sections[fromscope].parts.filter(\n          (_, i) => from != i\n        );\n        const arr = sections[toscope].parts;\n        sections[toscope].parts = [\n          ...arr.slice(0, to),\n          item,\n          ...arr.slice(to, arr.length)\n        ];\n      } else if (action === \"delete\") {\n        sections[detail.sectionindex].parts = sections[\n          detail.sectionindex\n        ].parts.filter((_, i) => detail.index != i);\n        sections = sections;\n      } else if (action === \"add\") {\n        sections[detail.sectionindex].parts = [\n          ...sections[detail.sectionindex].parts,\n          {\n            key: uuidv4(),\n            name: \"<name>\",\n            tbs: \"\",\n            threshold: \"\",\n            scores: Array(students.length).fill(\"\")\n          }\n        ];\n        sections = sections;\n      } else if (action === \"name_change\") {\n        sections[detail.sectionindex].parts[detail.index] = {\n          ...sections[detail.sectionindex].parts[detail.index],\n          name: detail.value\n        };\n        sections = sections;\n      } else if (action === \"cell_change\") {\n        sections[detail.sectionindex].parts[detail.index].scores[\n          detail.cellindex\n        ] = detail.value;\n        sections = sections;\n      } else if (action === \"tbs_change\") {\n        sections[detail.sectionindex].parts[detail.index] = {\n          ...sections[detail.sectionindex].parts[detail.index],\n          tbs: detail.value\n        };\n      } else if (action === \"threshold_change\") {\n        sections[detail.sectionindex].parts[detail.index] = {\n          ...sections[detail.sectionindex].parts[detail.index],\n          threshold: detail.value\n        };\n      }\n    }\n  }\n</script>\n\n<style>\n  .app {\n    display: grid;\n    grid-template: \"nav nav\" auto \"options preview\" 1fr / 300px 1fr;\n    height: 100vh;\n    width: 100vw;\n    overflow: hidden;\n  }\n\n  .hidden {\n    visibility: collapse;\n    height: 0px;\n    overflow: hidden;\n  }\n\n  @media only screen and (max-width: 600px) {\n    .app {\n      grid-template: \"nav\" auto \"options\" 300px \"preview\" 1fr / 1fr;\n    }\n  }\n</style>\n\n<svelte:head>\n  <title>{$_('page_title')}</title>\n</svelte:head>\n\n<div bind:this={creator} class=\"hidden\">\n  <!-- {#if creatorIndex} -->\n  <Rosette\n    colors={grades.map(x => x.color)}\n    grades={grades.map(x => x.name)}\n    sections={rosettes[creatorIndex].sections}\n    labels={rosettes[creatorIndex].labels}\n    {spaces}\n    {devitions}\n    lines={state.lines}\n    {layout}\n    textoptions={state.textoptions}\n    key={rosettes[creatorIndex].key} />\n  <!-- {/if} -->\n</div>\n\n<div class=\"app\">\n  <Nav />\n  <Options\n    {grades}\n    {labels}\n    {spaces}\n    {devitions}\n    {layout}\n    lines={Object.keys(state.lines).map(key => ({ ...state.lines[key], key }))}\n    textoptions={Object.keys(state.textoptions).map(key => ({\n      ...state.textoptions[key],\n      key\n    }))}\n    on:gradechange={handleGradechange}\n    on:dataEditor={() => (isEditRecordsOpen = true)}\n    on:labelchange={handleLabelChange}\n    on:spacechange={handleSpaceChange}\n    on:linestylechange={createKeyValueChangeHandler('lines')}\n    on:textoptionschange={createKeyValueChangeHandler('textoptions')}\n    on:layoutchange={e => (layout = e.detail)}\n    on:exportAll={handleDownloadFile} />\n  <Grid\n    items={rosettes}\n    let:item={rosette}\n    let:index\n    xsize={layout.size_x}\n    ysize={layout.size_y}>\n    <Rosette\n      colors={grades.map(x => x.color)}\n      grades={grades.map(x => x.name)}\n      sections={rosette.sections}\n      labels={rosette.labels}\n      {spaces}\n      {devitions}\n      lines={state.lines}\n      {layout}\n      textoptions={state.textoptions}\n      key={rosette.key} />\n  </Grid>\n</div>\n\n{#if isEditRecordsOpen}\n  <DataEditor\n    {sections}\n    {students}\n    {dataoptions}\n    {file}\n    on:close={() => (isEditRecordsOpen = false)}\n    on:change={handleDatachange} />\n{/if}\n",
    "<script>\n  import { slide } from \"svelte/transition\";\n\n  export let header = \"\";\n  export let reverse = false;\n  export let defaultState = true;\n\n  let isOpen = defaultState;\n</script>\n\n<style>\n  h4 {\n    margin: 0px;\n    display: grid;\n    grid-template: \"a b\" / auto 1fr;\n    grid-gap: 2px;\n    width: 100%;\n  }\n\n  h4 span {\n    cursor: pointer;\n    display: inline-block;\n    transition: transform 200ms ease-in-out;\n  }\n\n  h4 div {\n    margin-top: auto;\n  }\n\n  .isOpen {\n    transform: rotateZ(90deg);\n  }\n\n  .reverse {\n    grid-template: \"b a\" / 1fr auto;\n  }\n</style>\n\n<h4 class:reverse>\n  <div style=\"grid-area: a\" on:click={() => (isOpen = !isOpen)}>\n    <slot name=\"collapser\" {isOpen}>\n      <span class:isOpen>></span>\n    </slot>\n  </div>\n  <slot name=\"header\">\n    <span on:click={() => (isOpen = !isOpen)}>{header}</span>\n  </slot>\n</h4>\n\n{#if isOpen}\n  <div transition:slide>\n    <slot>\n      <p>Empty slot</p>\n    </slot>\n  </div>\n{/if}\n",
    "<script>\n  import HsvPicker from \"./HsvPicker.svelte\";\n  import { createEventDispatcher } from \"svelte\";\n  import { rgb2hex } from \"../helpers/color\"\n\n  export let color;\n  export let key;\n\n  const dispatch = createEventDispatcher();\n  let colorPickerOpen = false;\n\n  let colorPickerTop;\n  let colorPickerLeft;\n  let colorPickerWidth;\n  let colorPickerHeight;\n\n  function openColorPicker(e) {\n    colorPickerOpen = true;\n    window.addEventListener(\"mouseup\", handleMouseClick);\n  }\n\n  function handleMouseClick(e) {\n    if (\n      e.clientX < colorPickerLeft ||\n      e.clientX > colorPickerLeft + 240 ||\n      e.clientY < colorPickerTop ||\n      e.clientY > colorPickerTop + 340\n    ) {\n      colorPickerOpen = false;\n    }\n  }\n</script>\n\n<style>\n  .container {\n    display: grid;\n    grid-gap: 7px;\n    height: 35px;\n    grid-template-columns: 35px 1fr;\n  }\n\n  .preview {\n    width: 35px;\n    border: 1px solid #ccc;\n    border-radius: 2px;\n    display: block;\n    cursor: pointer;\n  }\n\n  input {\n    margin: 0px;\n    min-width: 60px;\n  }\n\n  .z-1000 {\n    z-index: 1000;\n  }\n</style>\n\n<div class=\"container\">\n  <div\n    class=\"preview\"\n    style=\"background-color: {color}\"\n    on:click={openColorPicker} />\n  <input\n    bind:value={color}\n    on:input={() => dispatch('change', { value: color, key })} />\n  {#if colorPickerOpen}\n    <div\n      class=\"z-1000\"\n      bind:offsetWidth={colorPickerLeft}\n      bind:offsetHeight={colorPickerTop}>\n      <HsvPicker\n        on:colorChange={e => dispatch('change', {\n            key,\n            value: rgb2hex(e.detail.r, e.detail.g, e.detail.b)\n          })}\n        startColor={color} />\n    </div>\n  {/if}\n</div>\n",
    "<script>\n  import DraggablePanes from \"./DraggablePanes.svelte\";\n  import { createEventDispatcher, tick } from \"svelte\";\n  import { slide } from \"svelte/transition\";\n  import { _ } from \"svelte-i18n\";\n  import XLSX from \"xlsx\";\n  import { findParent, findNodeIndex } from \"../helpers/nodes\"\n\n  export let students;\n  export let sections;\n  export let dataoptions;\n  export let file;\n\n  const dispatch = createEventDispatcher();\n\n  let sectionDraggable = false;\n  let partDraggable = false;\n  let dataNode;\n\n  function createChangeHandler(target, action, extra = {}) {\n    return e => {\n      dispatch(\"change\", {\n        target,\n        action,\n        value: e.target.value,\n        ...extra\n      });\n    };\n  }\n\n  function createPassthroughHandler(target, action) {\n    return e => {\n      dispatch(\"change\", {\n        ...e.detail,\n        target,\n        action\n      });\n    };\n  }\n\n  function findCellIndex(cell){\n    return findNodeIndex(cell.parentNode)\n  }\n\n  function findPartIndex(node) {\n    const part = findParent(node, \"li\");\n    return findNodeIndex(part)\n  }\n\n  function findSectionIndex(node) {\n    const partparent = findParent(node, \"ul\");\n    const section = findParent(partparent.parentNode, \"li\");\n    return findNodeIndex(section)\n  }\n\n  function getCell(cellindex, partindex, sectionindex) {\n    const section = dataNode.children[0].children[sectionindex];\n    if (!section) return undefined;\n    const part =\n      section.children[1].children[1].children[0].children[partindex];\n    if (!part) return undefined;\n    const partchildren = part.children[1];\n    if (!part) return undefined;\n    const cell = partchildren.children[cellindex];\n    if (!cell) return undefined;\n    return cell.children[0];\n  }\n\n  function countPart(sectionindex) {\n    const section = dataNode.children[0].children[sectionindex];\n    if (!section) return 0;\n    return section.children[1].children[1].children[0].children.length;\n  }\n\n  function tabstop(event) {\n    let cellindex = findCellIndex(event.target);\n    let partindex = findPartIndex(event.target);\n    let sectionindex = findSectionIndex(event.target);\n    if (event.key === \"Enter\") {\n      const newcell = getCell(\n        cellindex + (event.shiftKey ? -1 : 1),\n        partindex,\n        sectionindex\n      );\n      if (newcell) {\n        newcell.select();\n      }\n    } else if (event.key === \"Tab\") {\n      event.preventDefault();\n\n      let newcell;\n      partindex += event.shiftKey ? -1 : 1;\n      while (!newcell && sectionindex < sections.length && sectionindex >= 0) {\n        newcell = getCell(cellindex, partindex, sectionindex);\n        sectionindex += event.shiftKey ? -1 : 1;\n        partindex = event.shiftKey ? countPart(sectionindex) - 1 : 0;\n      }\n\n      if (newcell) {\n        newcell.select();\n      }\n    }\n  }\n\n  async function clearValue(event) {\n    event.target.value = \"\";\n    await tick();\n    event.target.select();\n  }\n\n  function notab(event) {\n    if (event.key === \"Tab\") {\n      event.preventDefault();\n      dispatch(\"change\", {\n        target: \"dataoptions\",\n        action: \"addthreshold\",\n        value: event.target.value\n      });\n      event.target.value = \"\";\n    }\n  }\n\n  function handleFile(e) {\n    var files = e.target.files,\n      f = files[0];\n    var reader = new FileReader();\n    reader.onload = function(e) {\n      var data = new Uint8Array(e.target.result);\n      var workbook = XLSX.read(data, { type: \"array\" });\n\n      dispatch(\"change\", {\n        target: \"file\",\n        action: \"file\",\n        value: workbook\n      });\n    };\n    reader.readAsArrayBuffer(f);\n  }\n</script>\n\n<style>\n  .container {\n    position: fixed;\n    top: 52px;\n    left: 0px;\n    bottom: 0px;\n    right: 0px;\n    background: white;\n    border: none;\n    border-radius: 2px;\n    overflow: auto;\n    z-index: 50;\n    display: grid;\n    grid-template: \"a a\" auto \"b b\" auto \"c d\" 1fr / auto 1fr;\n  }\n\n  .header {\n    display: flex;\n    justify-content: space-between;\n    padding: 3px 10px;\n    background: #eee;\n    grid-area: a;\n  }\n\n  .options {\n    grid-area: b;\n    display: flex;\n    padding: 10px;\n  }\n\n  .students {\n    margin-top: 55px;\n    grid-area: c;\n  }\n\n  .students input {\n    width: 150px;\n    white-space: nowrap;\n    text-align: left;\n    margin: 0px 5px;\n  }\n\n  .data {\n    display: grid;\n    grid-template-columns: auto auto auto;\n    justify-content: left;\n    overflow: auto;\n    height: inherit;\n    grid-area: d;\n  }\n\n  .cell {\n    border-bottom: 1px solid #ccc;\n    display: flex;\n    justify-content: center;\n    height: 25px;\n  }\n\n  h2 {\n    margin: 0px;\n    font-weight: normal;\n  }\n\n  button {\n    margin: 0px;\n  }\n\n  .section {\n    border: none;\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 20px;\n  }\n\n  .section .body {\n    display: flex;\n    flex-direction: row;\n    justify-content: stretch;\n    height: 100%;\n  }\n\n  .cell:first-child {\n    border-top: 1px solid #ccc;\n  }\n\n  .dragger {\n    display: flex;\n    justify-content: center;\n    height: 10px;\n    color: black;\n    line-height: 0px;\n    cursor: pointer;\n    user-select: none;\n    margin: 0px 2px;\n  }\n\n  .dragger:hover {\n    background: #eee;\n    color: white;\n  }\n\n  .section-name {\n    width: 100%;\n  }\n\n  .empty-delete {\n    height: 0px;\n    margin: 0px;\n    padding: 0px;\n  }\n\n  .students input,\n  .data input {\n    padding: 2px;\n    margin: 0px;\n    border: 0px;\n    border-radius: 0px;\n    text-align: center;\n  }\n\n  .add-section {\n    margin: 15px 5px;\n    height: 30px;\n    line-height: 15px;\n  }\n\n  .part input {\n    min-width: 76px;\n  }\n\n  .section-button,\n  .part-button {\n    padding: 2px 3px;\n    cursor: pointer;\n    border: none;\n    visibility: hidden;\n    background: transparent;\n  }\n\n  .part-button {\n    margin: auto;\n    display: block;\n  }\n\n  .part:hover .part-button,\n  .section:hover .section-button {\n    visibility: visible;\n  }\n\n  .section-button.green:hover {\n    color: green;\n  }\n\n  .section-button.red:hover,\n  .part-button.red:hover {\n    color: red;\n  }\n\n  .green {\n    font-size: 1.3em;\n    line-height: 8px;\n  }\n\n  .section .cell {\n    border-left: 1px solid #ccc;\n    min-width: max-content;\n  }\n\n  .data > ul > li:last-child .section > .cell,\n  .data > ul > li:last-child .section li:last-child .part .cell {\n    border-right: 1px solid #ccc;\n  }\n\n  .body li:first-child .cell {\n    border-left: 1px solid #ccc;\n  }\n\n  .data > ul > li:first-child .section li:first-child .part .cell {\n    border-left: none;\n  }\n\n  .students .cell {\n    border-right: 1px solid #ccc;\n    border-top: 1px solid #ccc;\n    border-bottom: none;\n  }\n\n  .students .cell:last-child {\n    border-right: 1px solid #ddd;\n    border-bottom: 1px solid #ddd;\n  }\n\n  .scroll {\n    overflow: auto;\n    height: 100%;\n  }\n\n  .students .cell.label {\n    border-top: none;\n    border-bottom: none;\n    justify-content: right;\n    padding-right: 3px;\n    height: 26px;\n  }\n\n  .thresholds {\n    display: flex;\n    vertical-align: center;\n  }\n\n  .thresholds input {\n    margin: auto 2px;\n  }\n\n  .thresholds input:last-child {\n    border-color: #ddd;\n  }\n  .thresholds input:last-child:hover,\n  .thresholds input:last-child:focus {\n    border-color: #ccc;\n  }\n\n  .options > div {\n    display: flex;\n  }\n\n  .options label {\n    margin: auto 2px;\n  }\n</style>\n\n{#if sections && students}\n  <div class=\"container\" transition:slide>\n    <div class=\"header\">\n      <h2>{$_('data_editor.title')}</h2>\n      <button on:click={() => dispatch('close')}>\n        {$_('data_editor.done')}\n      </button>\n    </div>\n    <div class=\"options\">\n      <div>\n        <label>{$_('data_editor.mode')}</label>\n        <select\n          value={dataoptions.mode}\n          on:change={createChangeHandler('dataoptions', 'modechange')}>\n          <option value=\"simple\">{$_('data_editor.mode_simple')}</option>\n          <option value=\"normal\">{$_('data_editor.mode_normal')}</option>\n          <option value=\"advanced\">{$_('data_editor.mode_advanced')}</option>\n        </select>\n      </div>\n      {#if dataoptions.mode !== 'simple'}\n        <label>{$_('data_editor.thresholds')}</label>\n        <div class=\"thresholds\">\n          {#each dataoptions.thresholds as threshold, index}\n            <input\n              size=\"1\"\n              value={threshold}\n              on:change={createChangeHandler(\n                'dataoptions',\n                'change_threshold',\n                {\n                  index\n                }\n              )} />\n          {/each}\n          <input\n            size=\"1\"\n            on:change={createChangeHandler('dataoptions', 'add_threshold')}\n            on:change={clearValue}\n            on:keydown={notab} />\n        </div>\n      {/if}\n      <input type=\"file\" on:change={handleFile} />\n      <select\n        value={file.selectedsheet}\n        on:change={createChangeHandler('file', 'selectedsheet')}>\n        {#each file.sheets as sheet}\n          <option>{sheet}</option>\n        {/each}\n      </select>\n    </div>\n    <div class=\"students\">\n      <div class=\"cell label\" />\n      {#if dataoptions.mode === 'normal' || dataoptions.mode === 'advanced'}\n        <div class=\"cell label\">{$_('data_editor.max')}</div>\n      {/if}\n      {#if dataoptions.mode === 'advanced'}\n        <div class=\"cell label\">{$_('data_editor.threshold')}</div>\n      {/if}\n      {#each students as student, index (student.key)}\n        <div class=\"cell\">\n          <input\n            size=\"1\"\n            title={student.name}\n            value={student.name}\n            on:change={createChangeHandler('students', 'change', { index })} />\n        </div>\n      {/each}\n      <div class=\"cell newstudent\">\n        <input\n          size=\"1\"\n          placeholder={$_('data_editor.new_student')}\n          on:change={createChangeHandler('students', 'add')}\n          on:change={clearValue} />\n      </div>\n    </div>\n    <div class=\"scroll\">\n      <div class=\"data\" bind:this={dataNode}>\n        <DraggablePanes\n          list={sections}\n          key=\"key\"\n          scope=\"secnption\"\n          let:item={section}\n          let:index={sectionindex}\n          on:sort={createPassthroughHandler('sections', 'reorder')}>\n          <span slot=\"dragger\" class=\"dragger\">...</span>\n          <span slot=\"delete\" />\n          <div class=\"section\">\n            <div class=\"cell\">\n              <button\n                title=\"remove section\"\n                class=\"section-button red\"\n                on:click={createChangeHandler('sections', 'delete', {\n                  index: sectionindex\n                })}>\n                X\n              </button>\n              <input\n                class=\"section-name\"\n                size=\"1\"\n                title={section.name}\n                value={section.name}\n                on:change={createChangeHandler('sections', 'change', {\n                  index: sectionindex\n                })} />\n              <button\n                title=\"add part\"\n                class=\"section-button green\"\n                on:click={createChangeHandler('parts', 'add', {\n                  sectionindex\n                })}>\n                +\n              </button>\n            </div>\n            <div class=\"body\">\n              <DraggablePanes\n                list={section.parts}\n                key=\"key\"\n                scope=\"part\"\n                scopeindex={sectionindex}\n                let:item={part}\n                let:index={partindex}\n                on:sort={createPassthroughHandler('parts', 'reorder')}>\n                <span slot=\"dragger\" class=\"dragger\">...</span>\n                <span class=\"empty-delete\" slot=\"delete\" />\n                <div class=\"part\">\n                  <div class=\"cell\">\n                    <input\n                      size=\"1\"\n                      title={part.name}\n                      value={part.name}\n                      on:change={createChangeHandler('parts', 'name_change', {\n                        index: partindex,\n                        sectionindex\n                      })}\n                      on:keydown={tabstop} />\n                  </div>\n                  {#if dataoptions.mode === 'normal' || dataoptions.mode === 'advanced'}\n                    <div class=\"cell\">\n                      <input\n                        size=\"1\"\n                        value={part.tbs}\n                        on:change={createChangeHandler('parts', 'tbs_change', {\n                          index: partindex,\n                          sectionindex\n                        })}\n                        on:keydown={tabstop} />\n                    </div>\n                  {/if}\n                  {#if dataoptions.mode === 'advanced'}\n                    <div class=\"cell\">\n                      <input\n                        size=\"1\"\n                        value={part.threshold}\n                        on:change={createChangeHandler(\n                          'parts',\n                          'threshold_change',\n                          {\n                            index: partindex,\n                            sectionindex\n                          }\n                        )}\n                        on:keydown={tabstop} />\n                    </div>\n                  {/if}\n                  {#each part.scores as score, cellindex}\n                    <div class=\"cell\">\n                      <input\n                        size=\"1\"\n                        value={score}\n                        on:change={createChangeHandler('parts', 'cell_change', {\n                          index: partindex,\n                          cellindex,\n                          sectionindex\n                        })}\n                        on:keydown={tabstop} />\n                    </div>\n                  {/each}\n                  <button\n                    class=\"part-button red\"\n                    on:click={createChangeHandler('parts', 'delete', {\n                      index: partindex,\n                      sectionindex\n                    })}>\n                    X\n                  </button>\n                </div>\n              </DraggablePanes>\n            </div>\n          </div>\n        </DraggablePanes>\n        <button\n          class=\"add-section\"\n          title=\"Add section\"\n          on:click={createChangeHandler('sections', 'add')}>\n          +\n        </button>\n      </div>\n    </div>\n  </div>\n{/if}\n",
    "<script>\n  import { createEventDispatcher } from \"svelte\";\n  import { round, limit, floor2zero } from \"../helpers/math\";\n\n  export let value = \"\";\n  export let size = \"\";\n  export let defaultValue = value;\n  export let step = 1;\n  export let bigstep = 10 * step;\n  export let smallstep = step / 10;\n  export let min = 0;\n  export let max = Infinity;\n  export let sensitivity = step;\n  export let finest = 3;\n\n  const dispatch = createEventDispatcher();\n  let input;\n  let isMousedown = false;\n  let isDragging = false;\n  let hasFocus = false;\n  let change = 0;\n\n  function handleMousedown(event) {\n    isMousedown = true;\n    window.addEventListener(\"mousemove\", handleMousemove);\n    window.addEventListener(\"mouseup\", handleMouseup);\n  }\n\n  function handleChange(event) {\n    dispatchChangeEvent(parseFloat(event.target.value), finest);\n  }\n\n  function handleMousemove(event) {\n    if (isMousedown && (!hasFocus || event.shiftKey || event.ctrlKey)) {\n      isDragging = true;\n      event.preventDefault();\n      event.stopPropagation();\n      let size = step;\n      let decimal = finest;\n      if (event.shiftKey && event.ctrlKey) {\n        size = bigstep;\n      } else if (event.shiftKey) {\n        size = smallstep;\n      } else if (event.ctrlKey) {\n        size = 1;\n        decimal = 0;\n      }\n      change += (event.movementX * sensitivity * size) / step;\n      if (Math.abs(change) > size) {\n        dispatchChangeEvent(\n          (parseFloat(value) || defaultValue) + floor2zero(change, size),\n          decimal\n        );\n        change %= step;\n      }\n    }\n  }\n\n  function handleMouseup(event) {  \n    if (!event.ctrlKey && !event.shiftKey) {\n      hasFocus = true;\n    }\n    if (isDragging) {\n      input.blur();\n      hasFocus = false;\n    }\n    if (event.ctrlKey && !isDragging) {\n      dispatchChangeEvent(defaultValue, finest);\n      input.blur();\n      hasFocus = false;\n    }\n    isMousedown = false;\n    isDragging = false;\n    window.removeEventListener(\"mouseup\", handleMouseup);\n    window.removeEventListener(\"mousemove\", handleMousemove);\n  }\n\n  function handleFocusout(event) {\n    hasFocus = false;\n  }\n\n  function handleKeydown(event) {\n    if (event.key === \"Enter\") {\n      input.blur();\n    }\n  }\n\n  function dispatchChangeEvent(value, decimal) {\n    value = limit(min, max, round(value, decimal));\n    dispatch(\"change\", { value });\n  }\n</script>\n\n<style>\n  .isDragging {\n    cursor: ew-resize;\n    user-select: none;\n  }\n\n  .canDrag {\n    cursor: ew-resize;\n  }\n</style>\n\n<input\n  data-testid=\"input\"\n  readonly={isDragging}\n  class:isDragging\n  class:canDrag={!hasFocus}\n  bind:this={input}\n  {size}\n  {value}\n  on:change={handleChange}\n  on:input\n  on:mousedown={handleMousedown}\n  on:focusout={handleFocusout}\n  on:keydown={handleKeydown} />\n",
    "<script>\n  import { createEventDispatcher } from \"svelte\";\n\n  export let options;\n  export let value;\n  export let sensitivity = 0.03;\n\n  const dispatch = createEventDispatcher();\n  let isMousedown = false;\n  let isDragging = false;\n  let hasFocus = false;\n  let ignore = false;\n  let change = 0;\n  let select;\n\n  function limit(x) {\n    return Math.max(0, Math.min(options.length - 1, x));\n  }\n\n  function handleMousedown(event) {\n    if (!ignore&& !event.ctrlKey) {\n      event.preventDefault();\n      isMousedown = true;\n      window.addEventListener(\"mouseup\", handleMouseup);\n    }\n    window.addEventListener(\"mousemove\", handleMousemove);\n  }\n\n  function handleMousemove(event) {\n    if (isMousedown) {\n      select.blur()\n      isDragging = true;\n      change += event.movementX * sensitivity;\n      if (Math.abs(change) > 1) {\n        const oldindex = options.findIndex(e => (e.value || e) === value);\n        const index =\n          oldindex + Math.sign(change) * Math.floor(Math.abs(change));\n        dispatchChangeEvent(options[limit(index)].value);\n        change %= 1;\n      }\n    }\n    ignore = false;\n  }\n\n  function handleMouseup(event) {\n    if (!isDragging && !ignore) {\n      ignore = true;\n      const event = document.createEvent(\"MouseEvents\");\n      event.initMouseEvent(\"click\", true, true, window);\n      select.dispatchEvent(event);\n    }\n    isMousedown = false;\n    isDragging = false;\n    window.removeEventListener(\"mousemove\", handleMousemove);\n    window.removeEventListener(\"mouseup\", handleMouseup);\n  }\n\n  function handleChange(event) {\n    dispatchChangeEvent(event.target.value);\n  }\n\n  function dispatchChangeEvent(value) {\n    dispatch(\"change\", { value });\n  }\n</script>\n\n<style>\n  .isDragging {\n    cursor: ew-resize;\n    user-select: none;\n  }\n\n  .canDrag {\n    cursor: ew-resize;\n  }\n</style>\n\n<select\n  data-testid=\"select\"\n  bind:this={select}\n  class:isDragging\n  class:canDrag={!hasFocus}\n  {value}\n  on:change={handleChange}\n  on:mousedown={handleMousedown}>\n  {#each options as option}\n    <option value={option.value || option}>{option.name || option}</option>\n  {/each}\n</select>\n",
    "<script>\n  import { quintOut } from \"svelte/easing\";\n  import { crossfade } from \"svelte/transition\";\n  import { flip } from \"svelte/animate\";\n  import { createEventDispatcher } from \"svelte\";\n  // FLIP ANIMATION\n  const [send, receive] = crossfade({\n    duration: d => Math.sqrt(d * 200),\n    fallback(node, params) {\n      const style = getComputedStyle(node);\n      const transform = style.transform === \"none\" ? \"\" : style.transform;\n      return {\n        duration: 600,\n        easing: quintOut,\n        css: t => `\n\t\t\t\t\ttransform: ${transform} scaleY(${t});\n\t\t\t\t\topacity: ${t}\n\t\t\t\t`\n      };\n    }\n  });\n  // DRAG AND DROP\n  let isOver = false;\n  let draggable = false;\n  let dragindex = -1;\n  const getDraggedParent = node =>\n    node.dataset && node.dataset.index\n      ? node.dataset\n      : getDraggedParent(node.parentNode);\n  const start = ev => {\n    ev.dataTransfer.setData(\"source\", ev.target.dataset.index);\n    dragindex = ev.target.dataset.index;\n  };\n  const over = ev => {\n    ev.preventDefault();\n    let dragged = getDraggedParent(ev.target);\n    if (isOver !== dragged.id) isOver = JSON.parse(dragged.id);\n  };\n  const leave = ev => {\n    let dragged = getDraggedParent(ev.target);\n    if (isOver === dragged.id) isOver = false;\n  };\n  const drop = ev => {\n    isOver = false;\n    ev.preventDefault();\n    let dragged = getDraggedParent(ev.target);\n    let from = ev.dataTransfer.getData(\"source\");\n    let to = dragged.index;  \n    reorder({ from, to });\n  };\n  // DISPATCH REORDER\n  const dispatch = createEventDispatcher();\n  const reorder = ({ from, to }) => {\n    dispatch(\"sort\", { from, to });\n  };\n  // UTILS\n  const getKey = item => (key ? item[key] : item);\n  // PROPS\n  export let list;\n  export let key;\n</script>\n\n<style>\n  ul {\n    list-style: none;\n    padding: 0;\n    margin: 0;\n  }\n  li {\n    padding: 2px 0px;\n    transition: border 0.1s linear;\n    display: grid;\n    grid-gap: 2px;\n    grid-template-columns: 20px 1fr 20px;\n  }\n  span {\n    border-radius: 2px;\n    display: flex;\n    justify-content: center;\n    cursor: pointer;\n  }\n  span:hover {\n    background: #ccc;\n  }\n  .delete {\n    line-height: 30px;\n  }\n  .over-top {\n    border-top: 2px solid #ccc;\n    margin-top: 3px;\n    padding-top: 5px;\n  }\n  .over-bottom {\n    border-bottom: 2px solid #ccc;\n    margin-bottom: 3px;\n    padding-bottom: 5px;\n  }\n</style>\n\n{#if list && list.length}\n  <ul>\n    {#each list as item, index (getKey(item))}\n      <li\n        data-index={index}\n        data-id={JSON.stringify(getKey(item))}\n        {draggable}\n        on:dragstart={start}\n        on:dragover={over}\n        on:dragleave={leave}\n        on:drop={drop}\n        in:receive={{ key: getKey(item) }}\n        out:send={{ key: getKey(item) }}\n        animate:flip={{ duration: 300 }}\n        class:over-top={getKey(item) === isOver && index < dragindex}\n        class:over-bottom={getKey(item) === isOver && index > dragindex}>\n        <span\n          on:mouseenter={() => (draggable = true)}\n          on:mouseleave={() => (draggable = false)}>\n          ...\n        </span>\n        <slot {item} {index}>\n          <p>{getKey(item)}</p>\n        </slot>\n        <span class=\"delete\" on:click={() => dispatch('delete', index)}>X</span>\n      </li>\n    {/each}\n  </ul>\n{/if}\n",
    "<script>\n  import { quintOut } from \"svelte/easing\";\n  import { crossfade } from \"svelte/transition\";\n  import { flip } from \"svelte/animate\";\n  import { createEventDispatcher } from \"svelte\";\n\n  export let list;\n  export let key;\n  export let scope = \"default\";\n  export let scopeindex = 0;\n\n  const [send, receive] = crossfade({\n    duration: d => Math.sqrt(d * 200),\n    fallback(node, params) {\n      const style = getComputedStyle(node);\n      const transform = style.transform === \"none\" ? \"\" : style.transform;\n      return {\n        duration: 600,\n        easing: quintOut,\n        css: t => `\n\t\t\t\t\ttransform: ${transform} scaleX(${t});\n\t\t\t\t\topacity: ${t}\n\t\t\t\t`\n      };\n    }\n  });\n\n  let isOver = false;\n  let draggable = false;\n  let dragindex = -1;\n  let dragscopeindex = -1;\n  const getDraggedParent = (node, scope) => {\n    if (\n      node.dataset &&\n      node.dataset.index &&\n      (!scope || node.dataset.scope === scope)\n    ) {\n      return node.dataset;\n    } else if (node.parentNode) {\n      return getDraggedParent(node.parentNode, scope);\n    } else {\n      return false;\n    }\n  };\n\n  const mouseup = e => {\n    window.removeEventListener(\"mouseup\", mouseup);\n    isOver = false;\n  };\n  const handleMouseEnter = e => {\n    window.addEventListener(\"mouseup\", mouseup);\n  };\n  const start = ev => {\n    ev.dataTransfer.setData(\"source\", ev.target.dataset.index);\n    ev.dataTransfer.setData(\"scopeindex\", ev.target.dataset.scopeindex);\n    ev.dataTransfer.setData(\"scope\", ev.target.dataset.scope);\n    dragindex = JSON.parse(ev.target.dataset.index);\n    dragscopeindex = JSON.parse(ev.target.dataset.scopeindex);\n  };\n  const over = ev => {\n    ev.preventDefault();\n    const scope = ev.dataTransfer.getData(\"scope\");\n    const dragged = getDraggedParent(ev.target, scope);\n    if (!dragged) isOver = false;\n    else if (isOver !== dragged.id) isOver = JSON.parse(dragged.id);\n  };\n  const leave = ev => {\n    const scope = ev.dataTransfer.getData(\"scope\");\n    const dragged = getDraggedParent(ev.target, false);\n    if (dragged.scope === scope) {\n      isOver = false;\n    }\n  };\n  const drop = ev => {\n    isOver = false;\n    ev.preventDefault();\n    const local_scope = ev.dataTransfer.getData(\"scope\");\n    const dragged = getDraggedParent(ev.target, local_scope);\n    if (scope !== local_scope) return;\n    const from = ev.dataTransfer.getData(\"source\");\n    const to = dragged.index;\n    const fromscope = ev.dataTransfer.getData(\"scopeindex\");\n    const toscope = dragged.scopeindex;\n    reorder({ from, to, fromscope, toscope });\n  };\n\n  const dispatch = createEventDispatcher();\n  const reorder = ({ from, to, fromscope, toscope }) => {\n    dispatch(\"sort\", { from, to, fromscope, toscope });\n  };\n\n  const getKey = item => (key ? item[key] : item);\n</script>\n\n<style>\n  ul {\n    display: flex;\n    list-style: none;\n    padding: 0;\n    margin: 0;\n    height: 100%;\n    width: 100%;\n  }\n  li {\n    padding: 2px 0px 0px 0px;\n    transition: border 0.1s linear;\n    display: grid;\n    grid-gap: 2px;\n    grid-template-rows: auto 1fr auto;\n  }\n  .over-left {\n    border-left: 2px solid #ccc;\n    margin-left: 3px;\n    padding-left: 3px;\n  }\n  .over-right {\n    border-right: 2px solid #ccc;\n    margin-right: 3px;\n    padding-right: 3px;\n  }\n  .placeholder {\n    height: 100%;\n    width: 100%;\n  }\n  .over {\n    border: 2px dotted #ccc;\n  }\n</style>\n\n{#if list}\n  <ul on:mousemove={handleMouseEnter}>\n    {#if list.length}\n      {#each list as item, index (getKey(item))}\n        <li\n          data-index={index}\n          data-id={JSON.stringify(getKey(item))}\n          data-scope={scope}\n          data-scopeindex={scopeindex}\n          {draggable}\n          on:dragstart={start}\n          on:dragover={over}\n          on:dragleave={leave}\n          on:drop={drop}\n          in:receive={{ key: getKey(item) }}\n          out:send={{ key: getKey(item) }}\n          animate:flip={{ duration: 300 }}\n          class:over-left={getKey(item) === isOver && (scopeindex < dragscopeindex || (scopeindex === dragscopeindex && index < dragindex))}\n          class:over-right={getKey(item) === isOver && (scopeindex > dragscopeindex || (scopeindex === dragscopeindex && index > dragindex))}>\n          <div\n            on:mouseenter={() => (draggable = true)}\n            on:mouseleave={() => (draggable = false)}>\n            <slot name=\"dragger\">...</slot>\n          </div>\n          <slot {item} {index}></slot>\n        </li>\n      {/each}\n    {:else}\n      <li\n        data-index={0}\n        data-id={'placeholder'}\n        data-scope={scope}\n        data-scopeindex={scopeindex}\n        on:dragstart={start}\n        on:dragover={over}\n        on:dragleave={leave}\n        on:drop={drop}\n        in:receive={{ key: 'placeholder' }}\n        out:send={{ key: 'placeholder' }}\n        class=\"placeholder\"\n        class:over={'placeholder' === isOver} />\n    {/if}\n  </ul>\n{/if}\n",
    "<script>\n  export let items;\n  export let xsize = 500;\n  export let ysize = 500;\n\n  $: rows = Math.ceil(Math.sqrt(items.length));\n  $: columns = Math.floor(Math.sqrt(items.length));\n\n  let isMousedown = false;\n  let scroller;\n  let scale = 1;\n\n  function handleMousedown(event) {\n    isMousedown = true;\n    window.addEventListener(\"mouseup\", handleMouseup);\n    window.addEventListener(\"mousemove\", handleMousemove);\n  }\n\n  function handleMousemove(event) {\n    if (isMousedown) {\n      scroller.scroll({\n        top: scroller.scrollTop - event.movementY,\n        left: scroller.scrollLeft - event.movementX\n      });\n    }\n  }\n\n  function handleMouseup(event) {\n    isMousedown = false;\n  }\n\n  function handleScroll(event) {\n    if (event.ctrlKey) {\n      event.preventDefault();\n      scale = Math.max(0.1, scale * (1 - event.deltaY * 0.05));\n    }\n  }\n</script>\n\n<style>\n  .container {\n    width: 100%;\n    height: 100%;\n    overflow: auto;\n    user-select: none;\n    cursor: grab;\n  }\n  .grid {\n    display: grid;\n    grid-gap: 15px;\n    padding: 15px;\n  }\n\n  .item-container {\n    transition: all 100ms ease;\n  }\n\n  .grabbing {\n    cursor: grabbing;\n  }\n</style>\n\n{#if items && items.length}\n  <div\n    class=\"container\"\n    on:mousedown={handleMousedown}\n    on:wheel={handleScroll}\n    bind:this={scroller}\n    class:grabbing={isMousedown}>\n    <div\n      class=\"grid\"\n      style=\"grid-template-columns: auto repeat({columns - 1}, 1fr);\n      grid-template-rows: repeat({rows}, 1fr);\">\n      {#each items as item, index (item.key)}\n        <div\n          class=\"item-container\"\n          style=\"height: {ysize * scale}px; width: {xsize * scale}px\">\n          <slot {item} {index} />\n        </div>\n      {/each}\n    </div>\n  </div>\n{/if}\n",
    "<style>\n  .main-container {\n    width: 240px;\n    height: 265px;\n    background: #f2f2f2;\n    border-radius: 1px;\n    -webkit-box-shadow: 0px 0px 4px 0px rgba(0, 0, 0, 0.51);\n    -moz-box-shadow: 0px 0px 4px 0px rgba(0, 0, 0, 0.51);\n    box-shadow: 0px 0px 4px 0px rgba(0, 0, 0, 0.51);\n    -webkit-touch-callout: none;\n    -webkit-user-select: none;\n    -khtml-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n  }\n\n  .saturation-gradient {\n    background: linear-gradient(\n      to right,\n      rgb(255, 255, 255),\n      rgba(255, 255, 255, 0)\n    );\n    width: 240px;\n    height: 160px;\n  }\n\n  .value-gradient {\n    background: linear-gradient(to top, rgb(0, 0, 0), rgba(0, 0, 0, 0));\n    overflow: hidden;\n    width: 240px;\n    height: 160px;\n  }\n\n  .hue-selector {\n    background: linear-gradient(\n      to right,\n      #ff0000 0%,\n      #ffff00 17%,\n      #00ff00 33%,\n      #00ffff 50%,\n      #0000ff 67%,\n      #ff00ff 83%,\n      #ff0000 100%\n    );\n    margin: 15px 10px 10px 10px;\n    border-radius: 10px;\n    height: 10px;\n  }\n\n  #hue-picker {\n    background: #fff;\n    width: 12px;\n    height: 12px;\n    border-radius: 50%;\n    left: 0%;\n    position: relative;\n    cursor: default;\n    transform: translate(-5px, -1px);\n    -webkit-box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.67);\n    -moz-box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.67);\n    box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.67);\n  }\n\n  #hue-event {\n    width: 236px;\n    height: 14px;\n    transform: translate(-8px, -14px);\n    cursor: default;\n    touch-action: none;\n  }\n\n  .alpha-selector {\n    background-image: linear-gradient(45deg, #808080 25%, transparent 25%),\n      linear-gradient(-45deg, #808080 25%, transparent 25%),\n      linear-gradient(45deg, transparent 75%, #808080 75%),\n      linear-gradient(-45deg, transparent 75%, #808080 75%);\n    background-size: 10px 10px;\n    background-position: 0 0, 0 5px, 5px -5px, -5px 0px;\n    margin: 10px 10px;\n    border-radius: 10px;\n    height: 10px;\n    position: relative;\n  }\n\n  #alpha-picker {\n    background: #fff;\n    width: 12px;\n    height: 12px;\n    border-radius: 50%;\n    left: 100%;\n    position: relative;\n    cursor: default;\n    transform: translate(-5px, -11px);\n    -webkit-box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.67);\n    -moz-box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.67);\n    box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.67);\n  }\n\n  #alpha-event {\n    width: 236px;\n    height: 14px;\n    transform: translate(-8px, -24px);\n    cursor: default;\n    touch-action: none;\n  }\n\n  .alpha-value {\n    background: linear-gradient(to right, rgba(0, 0, 0, 0), rgba(0, 0, 0, 1));\n    width: 100%;\n    height: 100%;\n    border-radius: 10px;\n  }\n\n  .colorsquare {\n    background: rgb(255, 0, 0);\n  }\n\n  #colorsquare-picker {\n    margin: 0;\n    padding: 0;\n    width: 12px;\n    height: 12px;\n    border-radius: 50%;\n    border: 2px solid #fffb;\n    position: relative;\n    transform: translate(-9px, -9px);\n    left: 100%;\n  }\n\n  #colorsquare-event {\n    width: 100%;\n    height: 100%;\n    position: relative;\n    transform: translate(0, -16px);\n    touch-action: none;\n  }\n\n  .color-info-box {\n    margin: 10px;\n    width: 100%;\n    height: 22px;\n    vertical-align: middle;\n    position: relative;\n  }\n\n  .color-picked {\n    width: 18px;\n    height: 18px;\n    border-radius: 2px;\n    background: rgba(255, 0, 0, 1);\n    display: inline-block;\n  }\n\n  .color-picked-bg {\n    background-image: linear-gradient(45deg, #808080 25%, transparent 25%),\n      linear-gradient(-45deg, #808080 25%, transparent 25%),\n      linear-gradient(45deg, transparent 75%, #808080 75%),\n      linear-gradient(-45deg, transparent 75%, #808080 75%);\n    background-size: 10px 10px;\n    background-position: 0 0, 0 5px, 5px -5px, -5px 0px;\n    border: 2px solid #fff;\n    border-radius: 4px;\n    width: 18px;\n    height: 18px;\n    color: #fff;\n    display: inline-block;\n  }\n\n  .hex-text-block {\n    display: inline-block;\n    background: white;\n    border-radius: 2px;\n    padding: 2px;\n    border: 1px solid #e3e3e3;\n    height: 16px;\n    width: 54px;\n    vertical-align: top;\n    text-align: center;\n  }\n\n  .rgb-text-block {\n    display: inline-block;\n    background: white;\n    border-radius: 2px;\n    padding: 2px;\n    margin: 0 1px;\n    border: 1px solid #dcdcdc;\n    height: 16px;\n    width: 23px;\n    vertical-align: top;\n    text-align: center;\n  }\n\n  .rgb-text-div {\n    right: 10%;\n    display: inline-block;\n    vertical-align: top;\n    position: absolute;\n  }\n\n  .text-label {\n    position: relative;\n    top: -12px;\n    font-family: sans-serif;\n    font-size: small;\n    color: #888;\n  }\n\n  .text {\n    display: inline;\n    font-family: sans-serif;\n    margin: 0;\n    display: inline-block;\n    font-size: 12px;\n    font-size-adjust: 0.5;\n    position: relative;\n    top: -1px;\n    vertical-align: middle;\n    -webkit-touch-callout: all;\n    -webkit-user-select: all;\n    -khtml-user-select: all;\n    -moz-user-select: all;\n    -ms-user-select: all;\n    user-select: all;\n  }\n</style>\n\n<script>\n  // https://github.com/qintarp/svelte-color-picker\n  import { onMount, createEventDispatcher } from \"svelte\";\n\n  export let startColor = \"#FF0000\";\n\n  onMount(() => {\n    document.addEventListener(\"mouseup\", mouseUp);\n    document.addEventListener(\"touchend\", mouseUp);\n    document.addEventListener(\"mousemove\", mouseMove);\n    document.addEventListener(\"touchmove\", touchMove);\n    document.addEventListener(\"touchstart\", killMouseEvents);\n    document.addEventListener(\"mousedown\", killTouchEvents);\n    setStartColor();\n  });\n\n  Number.prototype.mod = function (n) {\n    return ((this % n) + n) % n;\n  };\n  const dispatch = createEventDispatcher();\n  let tracked;\n  let h = 1;\n  let s = 1;\n  let v = 1;\n  let a = 1;\n  let r = 255;\n  let g = 0;\n  let b = 0;\n  let hexValue = \"#FF0000\";\n\n  function setStartColor() {\n    let hex = startColor.replace(\"#\", \"\");\n    if (hex.length !== 6 && hex.length !== 3 && !hex.match(/([^A-F0-9])/gi)) {\n      alert(\"Invalid property value (startColor)\");\n      return;\n    }\n    let hexFiltered = \"\";\n    if (hex.length === 3)\n      hex.split(\"\").forEach((c) => {\n        hexFiltered += c + c;\n      });\n    else hexFiltered = hex;\n    hexValue = hexFiltered;\n    r = parseInt(hexFiltered.substring(0, 2), 16);\n    g = parseInt(hexFiltered.substring(2, 4), 16);\n    b = parseInt(hexFiltered.substring(4, 6), 16);\n    rgbToHSV(r, g, b, true);\n    updateCsPicker();\n    updateHuePicker();\n  }\n\n  function removeEventListenerFromElement(\n    elementId,\n    eventName,\n    listenerCallback\n  ) {\n    let element = document.querySelector(elementId);\n    if (element) element.removeEventListener(eventName, listenerCallback);\n  }\n\n  function killMouseEvents() {\n    removeEventListenerFromElement(\"#alpha-event\", \"mousedown\", alphaDown);\n    removeEventListenerFromElement(\"#colorsquare-event\", \"mousedown\", csDown);\n    removeEventListenerFromElement(\"#hue-event\", \"mousedown\", hueDown);\n    document.removeEventListener(\"mouseup\", mouseUp);\n    document.removeEventListener(\"mousemove\", mouseMove);\n    document.removeEventListener(\"touchstart\", killMouseEvents);\n    document.removeEventListener(\"mousedown\", killTouchEvents);\n  }\n\n  function killTouchEvents() {\n    removeEventListenerFromElement(\n      \"#alpha-event\",\n      \"touchstart\",\n      alphaDownTouch\n    );\n    removeEventListenerFromElement(\n      \"#colorsquare-event\",\n      \"touchstart\",\n      csDownTouch\n    );\n    removeEventListenerFromElement(\"#hue-event\", \"touchstart\", hueDownTouch);\n    document.removeEventListener(\"touchend\", mouseUp);\n    document.removeEventListener(\"touchmove\", touchMove);\n    document.removeEventListener(\"touchstart\", killMouseEvents);\n    document.removeEventListener(\"mousedown\", killTouchEvents);\n  }\n\n  function updateCsPicker() {\n    let csPicker = document.querySelector(\"#colorsquare-picker\");\n    let xPercentage = s * 100;\n    let yPercentage = (1 - v) * 100;\n    csPicker.style.top = yPercentage + \"%\";\n    csPicker.style.left = xPercentage + \"%\";\n  }\n\n  function updateHuePicker() {\n    let huePicker = document.querySelector(\"#hue-picker\");\n    let xPercentage = h * 100;\n    huePicker.style.left = xPercentage + \"%\";\n  }\n\n  function colorChangeCallback() {\n    dispatch(\"colorChange\", {\n      r: r,\n      g: g,\n      b: b,\n      a: a,\n    });\n  }\n\n  function mouseMove(event) {\n    if (tracked) {\n      let mouseX = event.clientX;\n      let mouseY = event.clientY;\n      let trackedPos = tracked.getBoundingClientRect();\n      let xPercentage, yPercentage, picker;\n      switch (tracked.id) {\n        case \"colorsquare-event\":\n          xPercentage = ((mouseX - trackedPos.x) / 240) * 100;\n          yPercentage = ((mouseY - trackedPos.y) / 160) * 100;\n          xPercentage > 100\n            ? (xPercentage = 100)\n            : xPercentage < 0\n            ? (xPercentage = 0)\n            : null;\n          yPercentage > 100\n            ? (yPercentage = 100)\n            : yPercentage < 0\n            ? (yPercentage = 0)\n            : null;\n          picker = document.querySelector(\"#colorsquare-picker\");\n          yPercentage = yPercentage.toFixed(2);\n          xPercentage = xPercentage.toFixed(2);\n          picker.style.top = yPercentage + \"%\";\n          picker.style.left = xPercentage + \"%\";\n          s = xPercentage / 100;\n          v = 1 - yPercentage / 100;\n          colorChange();\n          break;\n        case \"hue-event\":\n          xPercentage = ((mouseX - 10 - trackedPos.x) / 220) * 100;\n          xPercentage > 100\n            ? (xPercentage = 100)\n            : xPercentage < 0\n            ? (xPercentage = 0)\n            : null;\n          xPercentage = xPercentage.toFixed(2);\n          picker = document.querySelector(\"#hue-picker\");\n          picker.style.left = xPercentage + \"%\";\n          h = xPercentage / 100;\n          hueChange();\n          break;\n        case \"alpha-event\":\n          xPercentage = ((mouseX - 10 - trackedPos.x) / 220) * 100;\n          xPercentage > 100\n            ? (xPercentage = 100)\n            : xPercentage < 0\n            ? (xPercentage = 0)\n            : null;\n          xPercentage = xPercentage.toFixed(2);\n          picker = document.querySelector(\"#alpha-picker\");\n          picker.style.left = xPercentage + \"%\";\n          a = xPercentage / 100;\n          colorChange();\n          break;\n      }\n    }\n  }\n\n  function touchMove(event) {\n    if (tracked) {\n      let mouseX = event.touches[0].clientX;\n      let mouseY = event.touches[0].clientY;\n      let trackedPos = tracked.getBoundingClientRect();\n      let xPercentage, yPercentage, picker;\n      switch (tracked.id) {\n        case \"colorsquare-event\":\n          xPercentage = ((mouseX - trackedPos.x) / 240) * 100;\n          yPercentage = ((mouseY - trackedPos.y) / 160) * 100;\n          xPercentage > 100\n            ? (xPercentage = 100)\n            : xPercentage < 0\n            ? (xPercentage = 0)\n            : null;\n          yPercentage > 100\n            ? (yPercentage = 100)\n            : yPercentage < 0\n            ? (yPercentage = 0)\n            : null;\n          picker = document.querySelector(\"#colorsquare-picker\");\n          yPercentage = yPercentage.toFixed(2);\n          xPercentage = xPercentage.toFixed(2);\n          picker.style.top = yPercentage + \"%\";\n          picker.style.left = xPercentage + \"%\";\n          s = xPercentage / 100;\n          v = 1 - yPercentage / 100;\n          colorChange();\n          break;\n        case \"hue-event\":\n          xPercentage = ((mouseX - 10 - trackedPos.x) / 220) * 100;\n          xPercentage > 100\n            ? (xPercentage = 100)\n            : xPercentage < 0\n            ? (xPercentage = 0)\n            : null;\n          xPercentage = xPercentage.toFixed(2);\n          picker = document.querySelector(\"#hue-picker\");\n          picker.style.left = xPercentage + \"%\";\n          h = xPercentage / 100;\n          hueChange();\n          break;\n        case \"alpha-event\":\n          xPercentage = ((mouseX - 10 - trackedPos.x) / 220) * 100;\n          xPercentage > 100\n            ? (xPercentage = 100)\n            : xPercentage < 0\n            ? (xPercentage = 0)\n            : null;\n          xPercentage = xPercentage.toFixed(2);\n          picker = document.querySelector(\"#alpha-picker\");\n          picker.style.left = xPercentage + \"%\";\n          a = xPercentage / 100;\n          colorChange();\n          break;\n      }\n    }\n  }\n\n  function csDown(event) {\n    tracked = event.currentTarget;\n    let xPercentage = ((event.offsetX + 1) / 240) * 100;\n    let yPercentage = ((event.offsetY + 1) / 160) * 100;\n    yPercentage = yPercentage.toFixed(2);\n    xPercentage = xPercentage.toFixed(2);\n    let picker = document.querySelector(\"#colorsquare-picker\");\n    picker.style.top = yPercentage + \"%\";\n    picker.style.left = xPercentage + \"%\";\n    s = xPercentage / 100;\n    v = 1 - yPercentage / 100;\n    colorChange();\n  }\n\n  function csDownTouch(event) {\n    tracked = event.currentTarget;\n    let rect = event.target.getBoundingClientRect();\n    let offsetX = event.targetTouches[0].clientX - rect.left;\n    let offsetY = event.targetTouches[0].clientY - rect.top;\n    let xPercentage = ((offsetX + 1) / 240) * 100;\n    let yPercentage = ((offsetY + 1) / 160) * 100;\n    yPercentage = yPercentage.toFixed(2);\n    xPercentage = xPercentage.toFixed(2);\n    let picker = document.querySelector(\"#colorsquare-picker\");\n    picker.style.top = yPercentage + \"%\";\n    picker.style.left = xPercentage + \"%\";\n    s = xPercentage / 100;\n    v = 1 - yPercentage / 100;\n    colorChange();\n  }\n\n  function mouseUp(event) {\n    tracked = null;\n  }\n\n  function hueDown(event) {\n    tracked = event.currentTarget;\n    let xPercentage = ((event.offsetX - 9) / 220) * 100;\n    xPercentage = xPercentage.toFixed(2);\n    let picker = document.querySelector(\"#hue-picker\");\n    picker.style.left = xPercentage + \"%\";\n    h = xPercentage / 100;\n    hueChange();\n  }\n\n  function hueDownTouch(event) {\n    tracked = event.currentTarget;\n    let rect = event.target.getBoundingClientRect();\n    let offsetX = event.targetTouches[0].clientX - rect.left;\n    let xPercentage = ((offsetX - 9) / 220) * 100;\n    xPercentage = xPercentage.toFixed(2);\n    let picker = document.querySelector(\"#hue-picker\");\n    picker.style.left = xPercentage + \"%\";\n    h = xPercentage / 100;\n    hueChange();\n  }\n\n  function hueChange() {\n    let rgb = hsvToRgb(h, 1, 1);\n    let colorsquare = document.querySelector(\".colorsquare\");\n    colorsquare.style.background = `rgba(${rgb[0]},${rgb[1]},${rgb[2]},1)`;\n    colorChange();\n  }\n\n  function colorChange() {\n    let rgb = hsvToRgb(h, s, v);\n    r = rgb[0];\n    g = rgb[1];\n    b = rgb[2];\n    hexValue = RGBAToHex();\n    let pickedColor = document.querySelector(\".color-picked\");\n    pickedColor.style.background = `rgba(${rgb[0]},${rgb[1]},${rgb[2]},${a})`;\n    colorChangeCallback();\n  }\n\n  function alphaDown(event) {\n    tracked = event.currentTarget;\n    let xPercentage = ((event.offsetX - 9) / 220) * 100;\n    xPercentage = xPercentage.toFixed(2);\n    let picker = document.querySelector(\"#alpha-picker\");\n    picker.style.left = xPercentage + \"%\";\n    a = xPercentage / 100;\n    colorChange();\n  }\n\n  function alphaDownTouch(event) {\n    tracked = event.currentTarget;\n    let rect = event.target.getBoundingClientRect();\n    let offsetX = event.targetTouches[0].clientX - rect.left;\n    let xPercentage = ((offsetX - 9) / 220) * 100;\n    xPercentage = xPercentage.toFixed(2);\n    let picker = document.querySelector(\"#alpha-picker\");\n    picker.style.left = xPercentage + \"%\";\n    a = xPercentage / 100;\n    colorChange();\n  }\n\n  //Math algorithms\n  function hsvToRgb(h, s, v) {\n    var r, g, b;\n\n    var i = Math.floor(h * 6);\n    var f = h * 6 - i;\n    var p = v * (1 - s);\n    var q = v * (1 - f * s);\n    var t = v * (1 - (1 - f) * s);\n\n    switch (i % 6) {\n      case 0:\n        (r = v), (g = t), (b = p);\n        break;\n      case 1:\n        (r = q), (g = v), (b = p);\n        break;\n      case 2:\n        (r = p), (g = v), (b = t);\n        break;\n      case 3:\n        (r = p), (g = q), (b = v);\n        break;\n      case 4:\n        (r = t), (g = p), (b = v);\n        break;\n      case 5:\n        (r = v), (g = p), (b = q);\n        break;\n    }\n\n    return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\n  }\n\n  function RGBAToHex() {\n    let rHex = r.toString(16);\n    let gHex = g.toString(16);\n    let bHex = b.toString(16);\n\n    if (rHex.length == 1) rHex = \"0\" + rHex;\n    if (gHex.length == 1) gHex = \"0\" + gHex;\n    if (bHex.length == 1) bHex = \"0\" + bHex;\n\n    return (\"#\" + rHex + gHex + bHex).toUpperCase();\n  }\n\n  function rgbToHSV(r, g, b, update) {\n    let rperc, gperc, bperc, max, min, diff, pr, hnew, snew, vnew;\n    rperc = r / 255;\n    gperc = g / 255;\n    bperc = b / 255;\n    max = Math.max(rperc, gperc, bperc);\n    min = Math.min(rperc, gperc, bperc);\n    diff = max - min;\n\n    vnew = max;\n    vnew == 0 ? (snew = 0) : (snew = diff / max);\n\n    for (let i = 0; i < 3; i++) {\n      if ([rperc, gperc, bperc][i] === max) {\n        pr = i;\n        break;\n      }\n    }\n    if (diff == 0) {\n      hnew = 0;\n      if (update) {\n        h = hnew;\n        s = snew;\n        v = vnew;\n        hueChange();\n        return;\n      } else {\n        return { h: hnew, s: snew, v: vnew };\n      }\n    } else {\n      switch (pr) {\n        case 0:\n          hnew = (60 * (((gperc - bperc) / diff) % 6)) / 360;\n          break;\n        case 1:\n          hnew = (60 * ((bperc - rperc) / diff + 2)) / 360;\n          break;\n        case 2:\n          hnew = (60 * ((rperc - gperc) / diff + 4)) / 360;\n          break;\n      }\n      if (hnew < 0) hnew += 6;\n    }\n\n    if (update) {\n      h = hnew;\n      s = snew;\n      v = vnew;\n      hueChange();\n    } else {\n      return { h: hnew, s: snew, v: vnew };\n    }\n  }\n</script>\n\n<div class=\"main-container\">\n\n  <div class=\"colorsquare size\">\n    <div class=\"saturation-gradient\">\n      <div class=\"value-gradient\">\n        <div id=\"colorsquare-picker\"></div>\n        <div\n          id=\"colorsquare-event\"\n          on:mousedown=\"{csDown}\"\n          on:touchstart=\"{csDownTouch}\"\n        ></div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"hue-selector\">\n    <div id=\"hue-picker\"></div>\n    <div\n      id=\"hue-event\"\n      on:mousedown=\"{hueDown}\"\n      on:touchstart=\"{hueDownTouch}\"\n    ></div>\n  </div>\n\n  <div class=\"alpha-selector\">\n    <div class=\"alpha-value\"></div>\n    <div id=\"alpha-picker\"></div>\n    <div\n      id=\"alpha-event\"\n      on:mousedown=\"{alphaDown}\"\n      on:touchstart=\"{alphaDownTouch}\"\n    ></div>\n  </div>\n\n  <div class=\"color-info-box\">\n    <div class=\"color-picked-bg\">\n      <div class=\"color-picked\"></div>\n    </div>\n\n    <div class=\"hex-text-block\">\n      <p class=\"text\">{hexValue}</p>\n    </div>\n\n    <div class=\"rgb-text-div\">\n      <div class=\"rgb-text-block\">\n        <p class=\"text\">{r}</p>\n        <p class=\"text-label\">R</p>\n      </div>\n\n      <div class=\"rgb-text-block\">\n        <p class=\"text\">{g}</p>\n        <p class=\"text-label\">G</p>\n      </div>\n\n      <div class=\"rgb-text-block\">\n        <p class=\"text\">{b}</p>\n        <p class=\"text-label\">B</p>\n      </div>\n    </div>\n  </div>\n\n</div>\n",
    "<script>\n  import { createEventDispatcher } from \"svelte\";\n  import { fade, fly } from \"svelte/transition\";\n\n  export let isOpen;\n  export let background = \"sandybrown\";\n  export let sidepanel = \"salmon\";\n  export let close = \"indianred\";\n  export let header;\n\n  const dispatch = createEventDispatcher();\n\n  function handleClick() {\n    dispatch(\"close\");\n  }\n</script>\n\n<style>\n  .background {\n    position: fixed;\n    width: 100%;\n    height: 100%;\n    top: 0px;\n    background-image: url(\"../pictures/star.svg\");\n    background-position: -300px center;\n    background-blend-mode: overlay;\n    background-repeat: space;\n    background-size: cover;\n    z-index: 100;\n  }\n\n  .holder {\n    position: fixed;\n    width: 100%;\n    height: 100%;\n    top: 0px;\n    z-index: 102;\n  }\n\n  .container {\n    position: relative;\n    width: 80%;\n    max-width: 800px;\n    min-height: 50%;\n    margin: 50px auto;\n    display: grid;\n    grid-template-columns: 30% 1fr;\n    background: white;\n  }\n\n  .content {\n    padding: 20px;\n  }\n\n  .side-image {\n    display: block;\n    transition: all 200ms;\n  }\n\n  .close {\n    position: absolute;\n    right: -21px;\n    top: -21px;\n    border-radius: 50%;\n    color: white;\n    width: 42px;\n    height: 42px;\n    cursor: pointer;\n  }\n\n  .close::after {\n    content: \"X\";\n    color: white;\n    font-size: 1.2em;\n    margin: auto;\n    display: flex;\n    justify-content: center;\n    line-height: 40px;\n  }\n\n  @media only screen and (max-width: 600px) {\n    .container {\n      grid-template-columns: 30px 1fr;\n    }\n  }\n</style>\n\n{#if isOpen}\n  <div\n    class=\"background\"\n    style=\"background-color: {background}\"\n    transition:fade={{ duration: 300 }}\n    on:click={handleClick} />\n  <div class=\"holder\">\n    <div\n      in:fly={{ x: -200, duration: 400 }}\n      out:fly={{ y: 200, duration: 400 }}\n      class=\"container\">\n      <span class=\"close\" data-testid=\"close-button\" style=\"background: {close}\" on:click={handleClick} />\n      <div class=\"side-image\" style=\"background: {sidepanel}\" />\n      <div class=\"content\">\n        <h1>{header}</h1>\n        <slot />\n      </div>\n    </div>\n  </div>\n{/if}\n",
    "<script>\n  import { createEventDispatcher } from \"svelte\";\n  import Collapsible from \"./Collapsible.svelte\";\n  import DragInput from \"./DragInput.svelte\";\n  import ColorSelector from \"./ColorSelector.svelte\";\n  import { _ } from \"svelte-i18n\";\n\n  export let label;\n  export let index;\n  export let defaultState = false;\n\n  const dispatch = createEventDispatcher();\n\n  function handleInput(prop) {\n    return event => {\n      const payload = {\n        action: \"change\",\n        label,\n        index\n      };\n      payload.label[prop] = event.target\n        ? event.target.value\n        : event.detail.value;\n      dispatch(\"labelchange\", payload);\n    };\n  }\n</script>\n\n<style>\n  .collapser {\n    width: 35px;\n    margin-bottom: 5px;\n  }\n\n  .collapser span {\n    display: inline-block;\n    transition: transform 200ms ease-in-out;\n    transform: rotateZ(90deg);\n    transform-origin: 5px 12px;\n  }\n\n  .header {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    font-weight: normal;\n    grid-gap: 2px;\n    margin-bottom: 5px;\n  }\n\n  .header label {\n    margin-top: 6px;\n    display: block;\n  }\n\n  .body {\n    display: flex;\n    flex-flow: wrap;\n    justify-content: left;\n  }\n\n  .body div {\n    display: grid;\n    grid-template-columns: 60px 60px;\n    margin-bottom: 5px;\n  }\n\n  .body div.double {\n    display: grid;\n    grid-template-columns: 60px 180px;\n  }\n\n  .body label {\n    display: inline;\n    margin: 5px 2px 0px 5px;\n  }\n\n  .remove {\n    background: lightsalmon;\n  }\n\n  .collapser .isOpen {\n    transform: rotateZ(-90deg);\n  }\n</style>\n\n<Collapsible reverse {defaultState}>\n  <button slot=\"collapser\" class=\"collapser\" let:isOpen>\n    <span class:isOpen>></span>\n  </button>\n  <div slot=\"header\" class=\"header\">\n    {#if label.readonly}\n      <label>{label.name}</label>\n    {:else}\n      <input size=\"5\" value={label.name} on:change={handleInput('name')} />\n      <input size=\"5\" value={label.value} on:change={handleInput('value')} />\n    {/if}\n  </div>\n  <div class=\"body\">\n    <div>\n      <label>{$_('properties.xpos')}</label>\n      <DragInput\n        size=\"1\"\n        min={-Infinity}\n        value={label.xpos}\n        on:change={handleInput('xpos')} />\n    </div>\n    <div>\n      <label>{$_('properties.ypos')}</label>\n      <DragInput\n        size=\"1\"\n        min={-Infinity}\n        value={label.ypos}\n        on:change={handleInput('ypos')} />\n    </div>\n    <div>\n      <label>{$_('properties.size')}</label>\n      <DragInput size=\"1\" value={label.size} on:change={handleInput('size')} />\n    </div>\n    <div>\n      <label>{$_('properties.weight')}</label>\n      <DragInput\n        size=\"1\"\n        value={label.weight}\n        on:change={handleInput('weight')} />\n    </div>\n    <div>\n      <label>{$_('properties.angle')}</label>\n      <DragInput size=\"1\" value={label.angle} on:change={handleInput('angle')} />\n    </div>\n    <div>\n      <label>{$_('properties.align')}</label>\n      <select value={label.anchor} on:change={handleInput('anchor')}>\n        <option value=\"start\">{$_('properties.align_left')}</option>\n        <option value=\"middle\">{$_('properties.align_center')}</option>\n        <option value=\"end\">{$_('properties.align_right')}</option>\n      </select>\n    </div>\n    <div class=\"double\">\n      <label>{$_('properties.color')}</label>\n      <ColorSelector\n        key={label.title}\n        color={label.color}\n        on:change={handleInput('color')} />\n    </div>\n  </div>\n  {#if !label.readonly}\n    <button\n      class=\"remove\"\n      on:click={() => dispatch('labelchange', {\n          action: 'delete',\n          label,\n          index\n        })}>\n      {$_('properties.remove')}\n    </button>\n  {/if}\n</Collapsible>\n",
    "<script>\n  import { createEventDispatcher } from \"svelte\";\n  import ColorSelector from \"./ColorSelector.svelte\";\n  import DragInput from \"./DragInput.svelte\";\n  import { _ } from \"svelte-i18n\";\n\n  export let key;\n  export let title;\n  export let width;\n  export let style;\n  export let color;\n  export let cap;\n\n  const dispatch = createEventDispatcher();\n\n  function createChangeHandler(prop) {\n    return event => {\n      const payload = { key, width, style, color, cap };\n      payload[prop] = event.target ? event.target.value : event.detail.value;\n      dispatch(\"linestylechange\", payload);\n    };\n  }\n</script>\n\n<style>\n  .title {\n    margin-top: 10px;\n  }\n\n  .props4 {\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr 2fr;\n    margin-bottom: 5px;\n  }\n\n  .props4 label {\n    margin: 6px 0px 0px 10px;\n  }\n\n  .props4 label:first-child {\n    margin-left: 0px;\n  }\n\n  .props2 {\n    display: grid;\n    grid-template-columns: 1fr 4fr;\n    margin-bottom: 5px;\n  }\n\n  .props3 {\n    display: grid;\n    grid-template-columns: 1fr 2fr 2fr;\n    margin-bottom: 5px;\n  }\n</style>\n\n<label class=\"title\">{title}</label>\n<div class=\"props4\">\n  <label>{$_('properties.line_thickness')}</label>\n  <DragInput\n    size={1}\n    step={0.05}\n    value={width}\n    on:change={createChangeHandler('width')} />\n  <label>{$_('properties.line_patern')}</label>\n  <select value={style} on:change={createChangeHandler('style')}>\n    <option value=\"none\">{$_('properties.line_patern_solid')}</option>\n    <option value=\"1 1\">{$_('properties.line_patern_dotted')}</option>\n    <option value=\"3 3\">{$_('properties.line_patern_dashed')}</option>\n    <option value=\"1 2 3 2\">{$_('properties.line_patern_dashdot')}</option>\n  </select>\n</div>\n<div class=\"props3\">\n  <label>{$_('properties.line_cap')}</label>\n  <select value={cap} on:change={createChangeHandler('cap')}>\n    <option value=\"butt\">{$_('properties.line_cap_butt')}</option>\n    <option value=\"square\">{$_('properties.line_cap_square')}</option>\n    <option value=\"round\">{$_('properties.line_cap_round')}</option>\n  </select>\n</div>\n\n<div class=\"props2\">\n  <label>{$_('properties.color')}</label>\n  <ColorSelector key={title} {color} on:change={createChangeHandler('color')} />\n</div>\n",
    "<script>\n  import InfoPopup from \"./InfoPopup.svelte\";\n  import { _, locale, locales } from \"svelte-i18n\";\n\n  let showAbout = false;\n  let showPrivacy = false;\n</script>\n\n<style>\n  nav {\n    background: seagreen;\n    display: grid;\n    grid-template-columns: 1fr auto auto;\n    vertical-align: middle;\n    grid-area: nav;\n    background-image: url(\"../pictures/star.svg\");\n    background-origin: border-box;\n    background-size: 250px;\n    background-repeat: no-repeat;\n    background-position: -130px -70px;\n    background-blend-mode: darken;\n  }\n\n  nav ul li a{\n    color: white\n  }\n\n  nav ul li {\n    margin: auto 10px;\n    list-style-type: none;\n    display: inline-block;\n    cursor: pointer;\n    color: white;\n  }\n\n  ul li:hover {\n    text-decoration: underline;\n  }\n\n  .logo {\n    text-decoration: none;\n    font-size: 2em;\n    padding: 5px 10px;\n    text-transform: uppercase;\n    color: white;\n  }\n\n  .logo span {\n    font-size: 0.5em;\n    text-transform: lowercase;\n  }\n\n  select {\n    background: transparent;\n    color: white;\n    border: none;\n    margin: 0px;\n    padding: 0px;\n    cursor: pointer;\n  }\n\n  li:hover select {\n    text-decoration: underline;\n  }\n</style>\n\n<nav>\n  <div href=\"/\" class=\"logo\">\n    rosette\n    <span>beta</span>\n  </div>\n  <ul>\n    <li on:click={() => (showAbout = true)}>{$_('about')}</li>\n    <li on:click={() => (showPrivacy = true)}>{$_('privacy')}</li>\n    <li><a href=\"https://github.com/teunreyniers/rosette\" target=\"_blank\">Github</a></li>\n    <li>\n      <select bind:value={$locale}>\n        {#each $locales as locale}\n          <option value={locale}>{locale}</option>\n        {/each}\n      </select>\n    </li>\n  </ul>\n</nav>\n\n<InfoPopup\n  isOpen={showAbout}\n  on:close={() => (showAbout = false)}\n  background=\"sandybrown\"\n  sidepanel=\"salmon\"\n  close=\"indianred\"\n  header={$_('about')}>\n  {@html $_('about_msg')}\n</InfoPopup>\n\n<InfoPopup\n  isOpen={showPrivacy}\n  on:close={() => (showPrivacy = false)}\n  background=\"rgb(86, 117, 232)\"\n  sidepanel=\"rgb(19, 19, 115)\"\n  close=\"rgb(57, 202, 202)\"\n  header={$_('privacy')}>\n  {@html $_('privacy_msg')}\n</InfoPopup>\n",
    "<script>\n  import ColorSelector from \"./ColorSelector.svelte\";\n  import { createEventDispatcher } from \"svelte\";\n  import DraggableList from \"./DraggableList.svelte\";\n  import Collapsible from \"./Collapsible.svelte\";\n  import LabelForm from \"./LabelForm.svelte\";\n  import DragInput from \"./DragInput.svelte\";\n  import DragSelect from \"./DragSelect.svelte\";\n  import LineStyleForm from \"./LineStyleForm.svelte\";\n  import TextForm from \"./TextForm.svelte\";\n  import { _ } from \"svelte-i18n\";\n\n  export let grades;\n  export let labels;\n  export let spaces;\n  export let devitions;\n  export let lines;\n  export let textoptions;\n  export let layout;\n\n  const papersizes = [\n    {\n      value: \"a4\",\n      name: \"A4\"\n    },\n    {\n      value: \"a5\",\n      name: \"A5\"\n    },\n    {\n      value: \"a6\",\n      name: \"A6\"\n    },\n    {\n      value: \"letter\",\n      name: \"Letter\"\n    }\n  ];\n\n  let length = 350;\n  let height = 35;\n\n  $: sum = spaces.reduce((a, v) => a + v, 0);\n  $: points = spaces.reduce(\n    (a, v) => [\n      ...a,\n      {\n        difference: v,\n        offset:\n          ((a[a.length - 1] && a[a.length - 1].offset) || 0) +\n          (v / sum) * length,\n        depth:\n          a.length <= 0\n            ? 0\n            : (((a[a.length - 1] && a[a.length - 1].depth) || 0) +\n                ((v / sum) * length < height\n                  ? ((((a[a.length - 1] && a[a.length - 1].difference) || 0) +\n                      v) /\n                      sum) *\n                      length <\n                    height\n                    ? 2\n                    : 1\n                  : 0)) %\n              (((((a[a.length - 1] && a[a.length - 1].difference) || 0) + v) /\n                sum) *\n                length <\n              height\n                ? 3\n                : 2)\n      }\n    ],\n    []\n  );\n\n  const dispatch = createEventDispatcher();\n</script>\n\n<style>\n  .background {\n    background-color: #eee;\n    padding: 10px 15px;\n    overflow: auto;\n  }\n\n  h3 {\n    margin: 5px 0px;\n  }\n  button {\n    margin: 5px 0px;\n    cursor: pointer;\n    user-select: none;\n  }\n\n  button:hover {\n    background: #fff;\n  }\n\n  .slider {\n    background: #ccc;\n    width: 4px;\n    border-radius: 5px;\n    margin: 20px 10px;\n    position: relative;\n  }\n\n  .grid2 {\n    display: grid;\n    grid-template-columns: 3fr 2fr;\n    grid-gap: 2px;\n  }\n\n  .point {\n    position: absolute;\n    background: #eee;\n    border: 1px solid #ccc;\n    width: 14px;\n    height: 14px;\n    margin-left: -6px;\n    margin-bottom: -7px;\n    border-radius: 50%;\n    cursor: pointer;\n  }\n  .point .line {\n    background: #ccc;\n    position: absolute;\n    top: 6px;\n    height: 2px;\n    right: 50px;\n    left: 14px;\n    width: 50px;\n  }\n\n  .point .input {\n    left: 50px;\n    position: absolute;\n    top: -10px;\n    z-index: 5;\n    margin: 0px;\n    padding: 0px;\n  }\n\n  .point:hover .line {\n    z-index: 6;\n  }\n\n  .point:hover .input {\n    z-index: 7;\n  }\n\n  .point:hover {\n    z-index: 7;\n  }\n\n  .point:hover span {\n    height: 8px;\n    width: 8px;\n    background: #ccc;\n    border-radius: 50%;\n    display: block;\n    margin: 3px;\n  }\n</style>\n\n<div class=\"background\">\n  <button on:click={() => dispatch('dataEditor')}>\n    {$_('options.edit_records')}\n  </button>\n  <div>\n    <button on:click={() => dispatch('exportAll', { type: 'svg' })}>\n      {$_('options.download_as.svg')}\n    </button>\n    <button on:click={() => dispatch('exportAll', { type: 'pdf' })}>\n      {$_('options.download_as.pdf')}\n    </button>\n    <button on:click={() => dispatch('exportAll', { type: 'png' })}>\n      {$_('options.download_as.png')}\n    </button>\n    <button on:click={() => dispatch('exportAll', { type: '1pdf' })}>\n      {$_('options.download_as.1pdf')}\n    </button>\n  </div>\n  <h3>{$_('options.title')}</h3>\n  <Collapsible header={$_('options.layout.title')}>\n    <div class=\"labelvalue\">\n      <div class=\"tri\">\n        <label>{$_('options.layout.size')}</label>\n        <DragInput\n          value={layout.size_x}\n          on:change={e => dispatch('layoutchange', {\n              ...layout,\n              size_x: e.detail.value\n            })} />\n        <DragInput\n          value={layout.size_y}\n          on:change={e => dispatch('layoutchange', {\n              ...layout,\n              size_y: e.detail.value\n            })} />\n      </div>\n      <div class=\"tri\">\n        <label>{$_('options.layout.center')}</label>\n        <DragInput\n          value={layout.center_x}\n          on:change={e => dispatch('layoutchange', {\n              ...layout,\n              center_x: e.detail.value\n            })} />\n        <DragInput\n          value={layout.center_y}\n          on:change={e => dispatch('layoutchange', {\n              ...layout,\n              center_y: e.detail.value\n            })} />\n      </div>\n      <div class=\"tri\">\n        <label>{$_('options.layout.angle')}</label>\n        <DragInput\n          step={0.02}\n          sensitivity={0.005}\n          min={-Infinity}\n          value={layout.angleoffset}\n          on:change={e => dispatch('layoutchange', {\n              ...layout,\n              angleoffset: e.detail.value\n            })} />\n        <span />\n      </div>\n    </div>\n  </Collapsible>\n  <Collapsible header={$_('options.export_options.title')} defaultState={false}>\n    <div class=\"labelvalue\">\n      <div class=\"bl\">\n        <label>{$_('options.export_options.pdf_paper_size')}</label>\n        <DragSelect\n          options={papersizes}\n          value={layout.papersize}\n          on:change={e => dispatch('layoutchange', {\n              ...layout,\n              papersize: e.detail.value\n            })} />\n      </div>\n      <div class=\"bl\">\n        <label>{$_('options.export_options.pdf_height')}</label>\n        <DragInput\n          value={layout.pdf_height}\n          on:change={e => dispatch('layoutchange', {\n              ...layout,\n              pdf_height: e.detail.value\n            })} />\n      </div>\n      <div class=\"tri\">\n        <label>{$_('options.export_options.png_size')}</label>\n        <DragInput\n          value={layout.png_width}\n          on:change={e => dispatch('layoutchange', {\n              ...layout,\n              png_width: e.detail.value\n            })} />\n        <DragInput\n          value={layout.png_height}\n          on:change={e => dispatch('layoutchange', {\n              ...layout,\n              png_height: e.detail.value\n            })} />\n      </div>\n    </div>\n  </Collapsible>\n  <Collapsible header={$_('options.labels.title')}>\n    {#each labels as label, index (label.key)}\n      <LabelForm {label} {index} on:labelchange />\n    {/each}\n    <button\n      on:click={() => dispatch('labelchange', { action: 'add', index: 0 })}>\n      {$_('options.labels.add_label')}\n    </button>\n  </Collapsible>\n  <Collapsible header={$_('options.color_and_grades.title')}>\n    <DraggableList\n      key=\"key\"\n      list={grades.reduce((a, v) => [v, ...a], [])}\n      let:item={grade}\n      let:index={i}\n      on:sort={e => dispatch('gradechange', {\n          action: 'reorder',\n          from: grades.length - 1 - e.detail.from,\n          to: grades.length - 1 - e.detail.to\n        })}\n      on:delete={e => dispatch('gradechange', {\n          action: 'delete',\n          index: grades.length - e.detail - 1\n        })}>\n      <div class=\"grid2\">\n        <ColorSelector\n          color={grade.color}\n          key={grade.key}\n          on:change={e => dispatch('gradechange', {\n              action: 'change',\n              index: grades.length - i - 1,\n              value: {\n                ...grade,\n                color: e.detail.value\n              }\n            })} />\n        <input\n          size=\"1\"\n          value={grade.name}\n          on:change={e => dispatch('gradechange', {\n              action: 'change',\n              index: grades.length - i - 1,\n              value: {\n                ...grade,\n                name: e.target.value\n              }\n            })} />\n      </div>\n    </DraggableList>\n    <button\n      on:click={e => dispatch('gradechange', { action: 'add', index: 0 })}>\n      {$_('options.color_and_grades.add_color')}\n    </button>\n  </Collapsible>\n  <Collapsible header={$_('options.widths.title')} defaultState={false}>\n    <label>{$_('options.widths.number_of_grades')}</label>\n    <DragInput\n      value={devitions}\n      sensitivity={0.02}\n      on:change={e => dispatch('spacechange', {\n          action: 'devitions',\n          value: e.detail.value\n        })} />\n    <div class=\"slider\" style=\"height:{length}px;\">\n      {#each points as point, index}\n        <div class=\"point\" style=\"bottom:{point.offset}px\">\n          <div class=\"line\" style=\"width:{30 + 60 * point.depth}px;\" />\n          <div class=\"input\" style=\"left:{30 + 60 * point.depth}px;\">\n            <DragInput\n              step={0.01}\n              value={point.difference}\n              size=\"1\"\n              on:change={e => dispatch('spacechange', {\n                  action: 'change',\n                  index,\n                  value: e.detail.value\n                })} />\n          </div>\n          <span />\n        </div>\n      {/each}\n    </div>\n  </Collapsible>\n  <Collapsible header={$_('options.lines.title')} defaultState={false}>\n    {#each lines as line, index (line.key)}\n      <LineStyleForm\n        key={line.key}\n        title={$_(`properties.${line.key}`)}\n        color={line.color}\n        style={line.style}\n        width={line.width}\n        cap={line.cap}\n        on:linestylechange />\n    {/each}\n  </Collapsible>\n  <Collapsible header={$_('options.text_options.title')} defaultState={false}>\n    {#each textoptions as option (option.key)}\n      <TextForm textoptions={option} on:textoptionschange />\n    {/each}\n  </Collapsible>\n</div>\n",
    "<script>\n  import { createEventDispatcher } from \"svelte\";\n\n  Array.prototype.lastOr = function(e) {\n    return this.length <= 0 ? e : this[this.length - 1];\n  };\n\n  export let sections;\n  export let devitions = 4;\n\n  export let colors = [\"#ff8ba7\", \"#ffc6c7\", \"#c3f0ca\", \"#abd1c6\"];\n  export let grades;\n  export let spaces = [2, 1, 1, 1, 0.7, 0.3];\n  export let style = \"piece\"; //piece | cirle\n  export let lines;\n  export let fontSizes = {\n    part: 0.07,\n    section: 0.1\n  };\n  export let key;\n  export let labels;\n  export let textoptions;\n  export let layout;\n\n  const fontfamily = \"sans-serif\";\n  const scale_factor = 100;\n  const dispatch = createEventDispatcher();\n\n  $: angleoffset = -Math.PI / 2 - 2 * (layout.angleoffset / count) * Math.PI;\n\n  $: parts = sections.reduce((a, v) => [...a, ...v.parts], []);\n\n  $: section_angles = sections.reduce(\n    (a, v) => [...a, a.lastOr(0) + v.parts.length],\n    [0]\n  );\n\n  $: count = parts.length;\n  $: totalspace = spaces.reduce((a, v) => a + v, 0);\n  $: textOffset =\n    ((spaces[devitions] / sumUntil(spaces) - fontSizes.part) / 2) *\n    scale_factor;\n\n  $: raduises = [...Array(spaces.length + 2).keys()].map(\n    d => (sumUntil(spaces, d) / totalspace) * scale_factor\n  );\n\n  function getCoordinate(radius, partnumber, angleoffset) {\n    const angle = (2 * Math.PI * partnumber) / count + angleoffset;\n    return `${radius * Math.cos(angle)} ${radius * Math.sin(angle)}`;\n  }\n\n  function getMovingCircleCoordinate(\n    radius,\n    partnumber,\n    space,\n    offset,\n    angleoffset\n  ) {\n    const angle =\n      (2 * Math.PI * (partnumber + (space * offset) / 100)) / count +\n      angleoffset;\n    return `${radius * Math.cos(angle)} ${radius * Math.sin(angle)}`;\n  }\n\n  function getLineCoordinate(\n    radius,\n    startpartnumber,\n    endpartnumber,\n    offset,\n    point,\n    angleoffset\n  ) {\n    const angle =\n      (2 *\n        Math.PI *\n        (startpartnumber +\n          ((endpartnumber - startpartnumber) * (offset + 50)) / 100)) /\n        count +\n      angleoffset;\n    const xm = radius * Math.cos(angle);\n    const ym = radius * Math.sin(angle);\n    const z = 200;\n    if (point === 0) {\n      return `${xm + z * Math.sin(angle)} ${ym - z * Math.cos(angle)}`;\n    } else {\n      return `${xm - z * Math.sin(angle)} ${ym + z * Math.cos(angle)}`;\n    }\n  }\n\n  function getRotationPoint(\n    radius,\n    startpartnumber,\n    endpartnumber,\n    offset,\n    angleoffset\n  ) {\n    const angle =\n      (2 *\n        Math.PI *\n        (startpartnumber +\n          ((endpartnumber - startpartnumber) * offset) / 100)) /\n        count +\n      angleoffset;\n    return `${radius * Math.cos(angle)} ${radius * Math.sin(angle)}`;\n  }\n  function getOffset(\n    radius,\n    startpartnumber,\n    endpartnumber,\n    offset,\n    angleoffset\n  ) {\n    const angle =\n      (2 *\n        Math.PI *\n        (startpartnumber +\n          ((endpartnumber - startpartnumber) * offset) / 100)) /\n        count +\n      angleoffset;\n    return radius * angle;\n  }\n\n  function x2(what) {\n    return `${what} ${what}`;\n  }\n\n  function scale(width, dasharray, cap) {\n    if (dasharray === \"none\") return \"none\";\n    return dasharray\n      .split(\" \")\n      .map(\n        (e, i) =>\n          (cap === \"butt\"\n            ? parseInt(e)\n            : i % 2\n            ? parseInt(e) + 1\n            : parseInt(e) - 1) * width\n      )\n      .join(\" \");\n  }\n\n  function sumUntil(array, index = Infinity) {\n    return array.slice(0, index).reduce((a, v) => a + v, 0);\n  }\n</script>\n\n<style>\n  svg {\n    border: 1px solid #ccc;\n  }\n</style>\n\n<svg\n  xmlns=\"http://www.w3.org/2000/svg\"\n  xmlns:xhtml=\"http://www.w3.org/1999/xhtml\"\n  xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n  viewbox=\"-{layout.center_x} -{layout.center_y}\n  {layout.size_x}\n  {layout.size_y}\">\n  {#each parts as part, i (part.key)}\n    <!-- Colors -->\n    {#if style === 'piece'}\n      <path\n        fill={colors[(part.devitions - 1) % colors.length]}\n        stroke={colors[(part.devitions - 1) % colors.length]}\n        stroke-width={0.2}\n        d=\"M{getCoordinate(raduises[part.devitions], i, angleoffset)} A{x2(raduises[part.devitions])}\n        1 0 1 {getCoordinate(raduises[part.devitions], i + 1, angleoffset)} L0 0\n        Z\" />\n    {:else}\n      {#each [...Array(part).keys()].reverse() as devition}\n        <path\n          style=\"fill:{devition < part ? colors[devition % colors.length] : 'white'};fill-opacity:{devition < part ? 1 : 0}\"\n          d=\"M{getCoordinate(raduises[devition + 1], i, angleoffset)} A{x2(raduises[devition + 1])}\n          1 0 1 {getCoordinate(raduises[devition + 1], i + 1, angleoffset)} L{getCoordinate(raduises[devition], i + 1, angleoffset)}\n          A{x2(raduises[devition])} 1 0 0 {getCoordinate(raduises[devition], i, angleoffset)}\n          Z\" />\n      {/each}\n    {/if}\n    <!-- Part Text -->\n    {#if textoptions.parts.curve === 'none'}\n      <path\n        id=\"part-name-{key}-{i}\"\n        d=\"M{getLineCoordinate(raduises[devitions] + textOffset + textoptions.parts.ypos, i, i + 1, textoptions.parts.xpos, 0, angleoffset)}\n        L{getLineCoordinate(raduises[devitions] + textOffset + textoptions.parts.ypos, i, i + 1, textoptions.parts.xpos, 1, angleoffset)}\"\n        fill=\"none\" />\n    {:else}\n      <path\n        id=\"part-name-{key}-{i}\"\n        d=\"M{getMovingCircleCoordinate(raduises[devitions] + textOffset + textoptions.parts.ypos, i, 1, textoptions.parts.xpos, angleoffset)}\n        A{x2(raduises[devitions] + textOffset + textoptions.parts.ypos)} 0 {1 > 0.5 * count ? 1 : 0}\n        1 {getMovingCircleCoordinate(raduises[devitions] + textOffset + textoptions.parts.ypos, i + 1, i + 1 - i, textoptions.parts.xpos, angleoffset)}\"\n        fill=\"none\" />\n    {/if}\n    <!-- part Text -->\n    <text\n      fill={textoptions.parts.color}\n      font-family={fontfamily}\n      font-size={textoptions.parts.size}\n      font-weight={textoptions.parts.weight}\n      transform=\"rotate({textoptions.parts.angle}\n      {getRotationPoint(raduises[devitions] + textOffset + textoptions.parts.ypos, i, i + 1, textoptions.parts.xpos + 50, angleoffset)})\">\n      <textPath\n        xlink:href=\"#part-name-{key}-{i}\"\n        startOffset=\"50%\"\n        text-anchor={textoptions.parts.anchor}>\n        {part.name}\n      </textPath>\n    </text>\n  {/each}\n\n  <!-- Circles -->\n  {#each [...Array(devitions + 1).keys()].reverse() as devition}\n    <circle\n      class=\"circle\"\n      cx=\"0\"\n      cy=\"0\"\n      r={raduises[devition + 1]}\n      stroke={lines.grades.color}\n      stroke-width={lines.grades.width}\n      stroke-dasharray={scale(lines.grades.width, lines.grades.style, lines.grades.cap)}\n      stroke-linecap={lines.grades.cap}\n      fill=\"none\" />\n  {/each}\n\n  <!-- Part Lines -->\n  {#each parts as part, i (part.key)}\n    <path\n      d=\"M0 0 L{getCoordinate(raduises[devitions + 1], i, angleoffset, angleoffset)}\"\n      stroke={lines.parts.color}\n      stroke-width={lines.parts.width}\n      stroke-dasharray={scale(lines.parts.width, lines.parts.style, lines.parts.cap)}\n      stroke-linecap={lines.parts.cap} />\n  {/each}\n\n  {#each sections as section, i}\n    <!-- Section Lines -->\n    <path\n      d=\"M0 0 L{getCoordinate(raduises[devitions + 2], section_angles[i], angleoffset, angleoffset)}\"\n      stroke={lines.sections.color}\n      stroke-width={lines.sections.width}\n      stroke-dasharray={scale(lines.sections.width, lines.sections.style, lines.sections.cap)}\n      stroke-linecap={lines.sections.cap} />\n\n    <!-- Section text path -->\n    <!-- Section Text -->\n    {#if textoptions.sections.curve === 'none'}\n      <path\n        id=\"section-name-{key}-{i}\"\n        d=\"M{getLineCoordinate(raduises[devitions + 1] + textOffset + textoptions.sections.ypos, section_angles[i], section_angles[i + 1], textoptions.sections.xpos, 0, angleoffset)}\n        L{getLineCoordinate(raduises[devitions + 1] + textOffset + textoptions.sections.ypos, section_angles[i], section_angles[i + 1], textoptions.sections.xpos, 1, angleoffset)}\"\n        fill=\"none\" />\n    {:else}\n      <path\n        id=\"section-name-{key}-{i}\"\n        d=\"M{getMovingCircleCoordinate(raduises[devitions + 1] + textOffset + textoptions.sections.ypos, section_angles[i], section_angles[i + 1] - section_angles[i], textoptions.sections.xpos, angleoffset)}\n        A{x2(raduises[devitions + 1] + textOffset + textoptions.sections.ypos)}\n        0 {section_angles[i + 1] - section_angles[i] > 0.5 * count ? 1 : 0} 1 {getMovingCircleCoordinate(raduises[devitions + 1] + textOffset + textoptions.sections.ypos, section_angles[i + 1], section_angles[i + 1] - section_angles[i], textoptions.sections.xpos, angleoffset)}\"\n        fill=\"none\" />\n    {/if}\n    <!-- Section Text -->\n    <text\n      fill={textoptions.sections.color}\n      font-family={fontfamily}\n      font-size={textoptions.sections.size}\n      font-weight={textoptions.sections.weight}\n      transform=\"rotate({textoptions.sections.angle}\n      {getRotationPoint(raduises[devitions + 1] + textOffset + textoptions.sections.ypos, section_angles[i], section_angles[i + 1], textoptions.sections.xpos + 50, angleoffset)})\">\n      <textPath\n        xlink:href=\"#section-name-{key}-{i}\"        \n        startOffset=\"50%\"\n        text-anchor={textoptions.sections.anchor}>\n        {section.name}\n      </textPath>\n    </text>\n  {/each}\n\n  <!-- grades -->\n  {#each grades as grade, i}\n    <text\n      x={textoptions.grades.xpos}\n      y={-raduises[i] - ((raduises[i + 1] - raduises[i]) * textoptions.grades.ypos) / 100}\n      font-size={textoptions.grades.size}\n      font-family={fontfamily}\n      font-weight={textoptions.grades.weight}\n      transform=\"rotate({textoptions.grades.angle}\n      {textoptions.grades.xpos}\n      {-raduises[i] - ((raduises[i + 1] - raduises[i]) * textoptions.grades.ypos) / 100})\"\n      text-anchor={textoptions.grades.anchor}\n      fill={textoptions.grades.color}>\n      {grades[i]}\n    </text>\n  {/each}\n\n  <!-- labels -->\n  {#each labels as label, index}\n    <text\n      x={label.xpos}\n      y={label.ypos}\n      font-family={fontfamily}\n      font-size={label.size}\n      font-weight={label.weight}\n      transform=\"rotate({label.angle}\n      {label.xpos}\n      {label.ypos})\"\n      text-anchor={label.anchor}\n      fill={label.color}>\n      {label.value}\n    </text>\n  {/each}\n\n  <text />\n</svg>\n",
    "<script>\n  import { createEventDispatcher } from \"svelte\";\n  import Collapsible from \"./Collapsible.svelte\";\n  import DragInput from \"./DragInput.svelte\";\n  import ColorSelector from \"./ColorSelector.svelte\";\n  import { _ } from \"svelte-i18n\";\n\n  export let textoptions;\n\n  const dispatch = createEventDispatcher();\n\n  function handleInput(prop) {\n    return event => {\n      const payload = {\n        ...textoptions\n      };\n      payload[prop] = event.target ? event.target.value : event.detail.value;\n      dispatch(\"textoptionschange\", payload);\n    };\n  }\n</script>\n\n<style>\n  .collapser {\n    width: 35px;\n    margin-bottom: 5px;\n  }\n\n  .collapser span {\n    display: inline-block;\n    transition: transform 200ms ease-in-out;\n    transform: rotateZ(90deg);\n    transform-origin: 5px 12px;\n  }\n\n  .header {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    font-weight: normal;\n    grid-gap: 2px;\n    margin-bottom: 5px;\n  }\n\n  .header label {\n    margin-top: 6px;\n    display: block;\n  }\n\n  .body {\n    display: flex;\n    flex-flow: wrap;\n    justify-content: left;\n  }\n\n  .body div {\n    display: grid;\n    grid-template-columns: 61px 65px;\n    margin-bottom: 5px;\n  }\n\n  .body div.double {\n    display: grid;\n    grid-template-columns: 61px 191px;\n  }\n\n  .body label {\n    display: inline;\n    margin: 5px 2px 0px 5px;\n  }\n\n  .collapser .isOpen {\n    transform: rotateZ(-90deg);\n  }\n</style>\n\n<Collapsible reverse defaultState={false}>\n  <button slot=\"collapser\" class=\"collapser\" let:isOpen>\n    <span class:isOpen>></span>\n  </button>\n  <div slot=\"header\" class=\"header\">\n    <label>{$_(`properties.${textoptions.key}`)}</label>\n  </div>\n  <div class=\"body\">\n    <div>\n      <label>{$_('properties.xoffset')}</label>\n      <DragInput\n        size=\"1\"\n        min={-Infinity}\n        value={textoptions.xpos}\n        on:change={handleInput('xpos')} />\n    </div>\n    <div>\n      <label>{$_('properties.yoffset')}</label>\n      <DragInput\n        size=\"1\"\n        min={-Infinity}\n        value={textoptions.ypos}\n        on:change={handleInput('ypos')} />\n    </div>\n    <div>\n      <label>{$_('properties.size')}</label>\n      <DragInput\n        size=\"1\"\n        value={textoptions.size}\n        on:change={handleInput('size')} />\n    </div>\n    <div>\n      <label>{$_('properties.weight')}</label>\n      <DragInput\n        size=\"1\"\n        value={textoptions.weight}\n        on:change={handleInput('weight')} />\n    </div>\n    <div>\n      <label>{$_('properties.angle')}</label>\n      <DragInput\n        size=\"1\"\n        value={textoptions.angle}\n        on:change={handleInput('angle')} />\n    </div>\n    <div>\n      <label>{$_('properties.align')}</label>\n      <select value={textoptions.anchor} on:change={handleInput('anchor')}>\n        <option value=\"start\">{$_('properties.align_left')}</option>\n        <option value=\"middle\">{$_('properties.align_center')}</option>\n        <option value=\"end\">{$_('properties.align_right')}</option>\n      </select>\n    </div>\n    <div>\n      <label>{$_('properties.curve')}</label>\n      <select value={textoptions.curve} on:change={handleInput('curve')}>\n        <option value=\"normal\">{$_('properties.curve_normal')}</option>\n        <option value=\"none\">{$_('properties.curve_none')}</option>\n      </select>\n    </div>\n    <div>\n      <label>{$_('properties.flip')}</label>\n      <select value={textoptions.flip} on:change={handleInput('flip')}>\n        <option value=\"none\">{$_('properties.flip_none')}</option>\n        <option value=\"horizontal\">{$_('properties.flip_horizontal')}</option>\n        <option value=\"vertical\">{$_('properties.flip_vertical')}</option>\n        <option value=\"both\">{$_('properties.flip_both')}</option>\n      </select>\n    </div>\n    <div class=\"double\">\n      <label>{$_('properties.color')}</label>\n      <ColorSelector\n        key={textoptions.key}\n        color={textoptions.color}\n        on:change={handleInput('color')} />\n    </div>\n  </div>\n</Collapsible>\n"
  ],
  "names": [],
  "mappings": "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"
}